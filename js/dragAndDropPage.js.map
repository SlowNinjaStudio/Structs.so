{"version":3,"file":"dragAndDropPage.js","mappings":"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","sources":["webpack://coindroids-v5-ui/./src/js/vendor/DragNDrop/DragNDropDraggableItem.js","webpack://coindroids-v5-ui/./src/js/vendor/DragNDrop/DragNDropDroppableArea.js","webpack://coindroids-v5-ui/./src/js/vendor/DragNDrop/DragNDropDroppableAreaAutoSnap.js","webpack://coindroids-v5-ui/./src/js/vendor/DragNDrop/DragNDropEventDetail.js","webpack://coindroids-v5-ui/./src/js/vendor/DragNDrop/DragNDropSnapContainer.js","webpack://coindroids-v5-ui/./src/js/vendor/ElementInfo.js","webpack://coindroids-v5-ui/./src/js/vendor/MoreMath.js","webpack://coindroids-v5-ui/webpack/bootstrap","webpack://coindroids-v5-ui/webpack/runtime/define property getters","webpack://coindroids-v5-ui/webpack/runtime/hasOwnProperty shorthand","webpack://coindroids-v5-ui/webpack/runtime/make namespace object","webpack://coindroids-v5-ui/./drag-and-drop/js/dragAndDropPage.js"],"sourcesContent":["import {ElementInfo} from \"../ElementInfo\";\nimport {Coordinate} from \"../MoreMath\";\nimport {DragNDropEventDetail} from \"./DragNDropEventDetail\";\n\nexport class DragNDropDraggableItem {\n\n  /**\n   * @param {string} draggableItemId\n   */\n  constructor(draggableItemId) {\n    this.draggableItemId = draggableItemId;\n    this.originalDraggableElement = document.getElementById(this.draggableItemId);\n    this.draggableElement = this.originalDraggableElement;\n    this.initialZIndex = this.draggableElement.style.zIndex;\n    this.elementCenter = ElementInfo.getElementCenter(this.draggableElement);\n    this.copyCount = 0;\n    this.dragStartTargetId = `DragNDropDragStart-${this.draggableItemId}`;\n    this.dragStartTargetElement = document.getElementById(this.dragStartTargetId);\n  }\n\n  /**\n   * @return {function}\n   */\n  onDrag() {\n    return function(event) {\n      const mousePosition = Coordinate.makeFromEvent(event);\n      const detail = new DragNDropEventDetail(\n        this.draggableItemId,\n        this.draggableElement,\n        mousePosition.x,\n        mousePosition.y\n      );\n      const dragEvent = new CustomEvent('DRAG_N_DROP_DRAG', { detail });\n\n      this.draggableElement.style.left = mousePosition.x - this.elementCenter.x + 'px';\n      this.draggableElement.style.top = mousePosition.y - this.elementCenter.y + 'px';\n      document.dispatchEvent(dragEvent);\n    }.bind(this);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} itemDragHandler\n   * @param {string} dragType COPY|MOVE\n   * @param {HTMLElement} selectedDraggableElement\n   * @param {function} beforeDragStart\n   * @param {function} afterDragEnd\n   * @return {function}\n   */\n  onDragStart(\n    eventName,\n    itemDragHandler,\n    dragType = 'COPY',\n    selectedDraggableElement = null,\n    beforeDragStart = () => {},\n    afterDragEnd = () => {}\n  ) {\n    return function (event) {\n      event.preventDefault();\n\n      beforeDragStart();\n\n      if (dragType === 'COPY') {\n        this.copyCount++;\n        this.draggableElement = this.originalDraggableElement.cloneNode(true);\n        this.draggableElement.id = `${this.draggableElement.id}-copy-${this.copyCount}`;\n      } else if (dragType === 'MOVE' && selectedDraggableElement !== null) {\n        this.draggableElement = selectedDraggableElement;\n      }\n      document.body.appendChild(this.draggableElement);\n\n      const eventEnd = (eventName === 'touchmove') ? 'touchend' : 'mouseup';\n      const endHandler = this.onDrop(eventName, itemDragHandler);\n      document.addEventListener(eventEnd, endHandler, { once: true });\n\n      const mousePosition = Coordinate.makeFromEvent(event);\n      this.draggableElement.style.position = 'absolute';\n      this.draggableElement.style.zIndex = '999';\n      this.draggableElement.style.left = mousePosition.x - this.elementCenter.x + 'px';\n      this.draggableElement.style.top = mousePosition.y - this.elementCenter.y + 'px';\n\n      document.addEventListener(eventName, itemDragHandler);\n\n      afterDragEnd();\n    }.bind(this);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} itemDragHandler\n   * @return {function}\n   */\n  onDrop(eventName, itemDragHandler) {\n    return function (event) {\n      event.preventDefault();\n\n      document.removeEventListener(eventName, itemDragHandler);\n\n      const eventStart = (eventName === 'touchmove') ? 'touchstart' : 'mousedown';\n      this.draggableElement.addEventListener(eventStart, this.onDragStart(\n        eventName,\n        itemDragHandler,\n        'MOVE',\n        this.draggableElement\n      ));\n\n      this.draggableElement.style.zIndex = this.initialZIndex;\n\n      const mousePosition = Coordinate.makeFromEvent(event);\n      const detail = new DragNDropEventDetail(\n        this.draggableItemId,\n        this.draggableElement,\n        mousePosition.x,\n        mousePosition.y\n      );\n      const dropEvent = new CustomEvent('DRAG_N_DROP_DROP', { detail });\n\n      document.dispatchEvent(dropEvent);\n    }.bind(this);\n  }\n\n  addDragStartListener(element, beforeDragStart = () => {}, afterDragStart = () => {}) {\n    const itemDragHandler = this.onDrag();\n\n    const touchStartHandler = this.onDragStart('touchmove', itemDragHandler, 'COPY', null, beforeDragStart, afterDragStart);\n    const mouseDownHandler = this.onDragStart('mousemove', itemDragHandler, 'COPY', null, beforeDragStart, afterDragStart);\n\n    element.addEventListener('touchstart', touchStartHandler);\n    element.addEventListener('mousedown', mouseDownHandler);\n  }\n\n  init() {\n    const dragStartTarget = this.dragStartTargetElement ? this.dragStartTargetElement : this.originalDraggableElement;\n    this.addDragStartListener(dragStartTarget);\n  }\n\n}\n","import {DragNDropEventDetail} from \"./DragNDropEventDetail\";\nimport {ElementInfo} from \"../ElementInfo\";\nimport {Rectangle} from \"../MoreMath\";\n\nexport class DragNDropDroppableArea {\n\n  /**\n   * @param {string} droppableAreaId\n   */\n  constructor(droppableAreaId) {\n    this.droppableAreaId = droppableAreaId;\n    this.onDropInside = () => {};\n    this.onDropOutside = () => {};\n    this.onDragOver = () => {};\n  }\n\n  init() {\n    document.addEventListener('DRAG_N_DROP_DROP', function(customEvent) {\n      const dropEventDetail = DragNDropEventDetail.makeFromCustomEvent(customEvent);\n      const droppableAreaElement = document.getElementById(this.droppableAreaId);\n      const droppableAreaPosition = ElementInfo.getPosition(droppableAreaElement);\n      const droppableAreaShape = new Rectangle(\n        droppableAreaElement.offsetWidth,\n        droppableAreaElement.offsetHeight,\n        droppableAreaPosition.x,\n        droppableAreaPosition.y\n      );\n\n      if (droppableAreaShape.isPointInside(dropEventDetail.getPosition())) {\n        this.onDropInside(customEvent);\n      } else {\n        this.onDropOutside(customEvent);\n      }\n    }.bind(this));\n\n    document.addEventListener('DRAG_N_DROP_DRAG', function(customEvent) {\n      const dropEventDetail = DragNDropEventDetail.makeFromCustomEvent(customEvent);\n      const droppableAreaElement = document.getElementById(this.droppableAreaId);\n      const droppableAreaPosition = ElementInfo.getPosition(droppableAreaElement);\n      const droppableArea = new Rectangle(\n        droppableAreaElement.offsetWidth,\n        droppableAreaElement.offsetHeight,\n        droppableAreaPosition.x,\n        droppableAreaPosition.y\n      );\n\n      if (droppableArea.isPointInside(dropEventDetail.getPosition())) {\n        this.onDragOver(customEvent);\n      }\n    }.bind(this));\n  }\n\n}\n","import {DragNDropDroppableArea} from \"./DragNDropDroppableArea\";\nimport {DragNDropEventDetail} from \"./DragNDropEventDetail\";\nimport {DragNDropSnapContainer} from \"./DragNDropSnapContainer\";\n\nexport class DragNDropDroppableAreaAutoSnap extends DragNDropDroppableArea {\n\n  /**\n   * @param {string} droppableAreaId\n   */\n  constructor(droppableAreaId) {\n    super(droppableAreaId);\n    this.snapContainers = new Map();\n    this.onDropInside = function(customEvent) {\n      const detail = DragNDropEventDetail.makeFromCustomEvent(customEvent);\n      const snapContainer = this.getSnapContainer(detail.draggableItemId);\n      if (snapContainer) {\n        snapContainer.containerElement.replaceChildren(detail.draggableElement);\n        detail.draggableElement.style.position = 'relative';\n        detail.draggableElement.style.left = 'auto';\n        detail.draggableElement.style.top = 'auto';\n        detail.draggableElement.style.zIndex = '0';\n      } else {\n        detail.draggableElement.remove();\n      }\n    }.bind(this);\n    this.onDropOutside = function(customEvent) {\n      const detail = DragNDropEventDetail.makeFromCustomEvent(customEvent);\n      detail.draggableElement.remove();\n    };\n  }\n\n  /**\n   * @param {DragNDropSnapContainer} snapContainer\n   */\n  addSnapContainer(snapContainer) {\n    this.snapContainers.set(snapContainer.draggableItemId, snapContainer);\n  }\n\n  /**\n   * @param draggableItemId\n   * @return {DragNDropSnapContainer}\n   */\n  getSnapContainer(draggableItemId) {\n    return this.snapContainers.get(draggableItemId);\n  }\n\n}\n","import {Coordinate} from \"../MoreMath\";\n\nexport class DragNDropEventDetail {\n\n  /**\n   * @param {string} draggableItemId\n   * @param {HTMLElement} draggableElement\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(draggableItemId, draggableElement, x, y) {\n    this.draggableItemId = draggableItemId;\n    this.draggableElement = draggableElement;\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * @param {CustomEvent} customEvent\n   * @return {DragNDropEventDetail}\n   */\n  static makeFromCustomEvent(customEvent) {\n    return new DragNDropEventDetail(\n      customEvent.detail.draggableItemId,\n      customEvent.detail.draggableElement,\n      customEvent.detail.x,\n      customEvent.detail.y\n    );\n  }\n\n  /**\n   * @return {Coordinate}\n   */\n  getPosition() {\n    return new Coordinate(this.x, this.y);\n  }\n\n}\n","export class DragNDropSnapContainer {\n\n  /**\n   * @param {string} snapContainerId\n   * @param {string} draggableItemId\n   */\n  constructor(snapContainerId, draggableItemId) {\n    this.snapContainerId = snapContainerId;\n    this.draggableItemId = draggableItemId;\n    this.containerElement = document.getElementById(this.snapContainerId);\n  }\n\n}\n","import {Coordinate} from \"./MoreMath\";\n\nexport class ElementInfo {\n\n  /**\n   * @param {HTMLElement} element\n   */\n  static getElementCenter(element) {\n    return new Coordinate(\n      Math.floor(element.offsetWidth / 2),\n      Math.floor(element.offsetHeight / 2),\n    );\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @return {Coordinate}\n   */\n  static getPosition(element) {\n    const rect = element.getBoundingClientRect();\n    const scrollLeft = window.scrollX || document.documentElement.scrollLeft;\n    const scrollTop = window.scrollY || document.documentElement.scrollTop;\n    return new Coordinate(rect.left + scrollLeft, rect.top + scrollTop);\n  }\n\n}\n","export class CoordinateError extends Error {\n\n  /**\n   * @param {string} message\n   */\n  constructor(message) {\n    super(message);\n    this.name = \"CoordinateError\";\n  }\n\n}\n\nexport class Coordinate {\n  constructor(x, y, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  /**\n   * @param {Event} event\n   * @return {Coordinate}\n   * @throws {CoordinateError}\n   */\n  static makeFromEvent(event) {\n    if (event instanceof TouchEvent && event.changedTouches.length > 0) {\n      return new Coordinate(event.changedTouches[0].pageX, event.changedTouches[0].pageY);\n    } else if (event instanceof MouseEvent) {\n      return new Coordinate(event.pageX, event.pageY);\n    } else {\n      throw new CoordinateError('Unknown event type');\n    }\n  }\n}\n\nexport class Rectangle {\n\n  /**\n   * @param {Number} width\n   * @param {Number} height\n   * @param {Number} x\n   * @param {Number} y\n   */\n  constructor(width, height, x = 0, y = 0) {\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * @param {Coordinate} point\n   * @return {boolean}\n   */\n  isPointInside(point) {\n    return this.x <= point.x && point.x <= this.x + this.width\n      && this.y <= point.y && point.y <= this.y + this.height;\n  }\n\n}\n\nexport class MoreMath {\n  /**\n   * @param {number} number\n   * @param {number} digits The number of digits to appear after the decimal point\n   * @return {number}\n   */\n  static roundDecimals(number, digits) {\n    const precision = Math.pow(10, digits);\n    return Math.round(number * precision) / precision;\n  }\n\n  /**\n   * @param {number} xOrigin\n   * @param {number} yOrigin\n   * @param {number} radius\n   * @param {number} thetaInRadians\n   * @return {Coordinate}\n   */\n  static parametricEquationOfTheCircle(xOrigin, yOrigin, radius, thetaInRadians) {\n    const xCircle = xOrigin + radius * Math.cos(thetaInRadians);\n    const yCircle = yOrigin + radius * Math.sin(thetaInRadians);\n    return new Coordinate(\n      this.roundDecimals(xCircle, 2),\n      this.roundDecimals(yCircle, 2)\n    )\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @return {number}\n   */\n  static getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {DragNDropDraggableItem} from \"../../src/js/vendor/DragNDrop/DragNDropDraggableItem\";\nimport {DragNDropSnapContainer} from \"../../src/js/vendor/DragNDrop/DragNDropSnapContainer\";\nimport {DragNDropDroppableAreaAutoSnap} from \"../../src/js/vendor/DragNDrop/DragNDropDroppableAreaAutoSnap\";\n\nwindow.addEventListener('load', () => {\n  const draggableItems = [\n    new DragNDropDraggableItem('barrelStandard'),\n    new DragNDropDraggableItem('barrelMuzzleBreak'),\n    new DragNDropDraggableItem('recoilSpring'),\n    new DragNDropDraggableItem('recoilHydraulic'),\n    new DragNDropDraggableItem('receiverMechanical'),\n    new DragNDropDraggableItem('receiverElectronic')\n  ];\n\n  for (let i = 0; i < draggableItems.length; i++) {\n    draggableItems[i].init();\n  }\n\n  const snapContainers = [\n    new DragNDropSnapContainer('snapTargetBarrel', 'barrelStandard'),\n    new DragNDropSnapContainer('snapTargetBarrel', 'barrelMuzzleBreak'),\n    new DragNDropSnapContainer('snapTargetRecoil', 'recoilSpring'),\n    new DragNDropSnapContainer('snapTargetRecoil', 'recoilHydraulic'),\n    new DragNDropSnapContainer('snapTargetReceiver', 'receiverMechanical'),\n    new DragNDropSnapContainer('snapTargetReceiver', 'receiverElectronic'),\n  ];\n\n  const detailedItemViewDroppableArea = new DragNDropDroppableAreaAutoSnap('detailedItemViewDroppableArea');\n\n  for (let i = 0; i < snapContainers.length; i++) {\n    detailedItemViewDroppableArea.addSnapContainer(snapContainers[i]);\n  }\n\n  detailedItemViewDroppableArea.init();\n});\n"],"names":[],"sourceRoot":""}