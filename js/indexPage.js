/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/api/DroidApi.js":
/*!********************************!*\
  !*** ./src/js/api/DroidApi.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidApi\": () => (/* binding */ DroidApi)\n/* harmony export */ });\n/* harmony import */ var _vendor_JsonAjaxer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/JsonAjaxer */ \"./src/js/vendor/JsonAjaxer.js\");\n/* harmony import */ var _models_StructureFactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/StructureFactory */ \"./src/js/models/StructureFactory.js\");\n/* harmony import */ var _models_SchematicFactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/SchematicFactory */ \"./src/js/models/SchematicFactory.js\");\n\n\n\n\n/**\n * API Gateway for the Droid API\n */\nclass DroidApi {\n\n  /**\n   * @param {string} scheme example https://\n   * @param {string} domain example coindroids.com\n   * @param {Object} ajax AJAX handling class\n   */\n  constructor(scheme, domain, ajax = null) {\n    this.scheme = scheme;\n    this.domain = domain;\n    this.ajax = (ajax !== null) ? ajax: new _vendor_JsonAjaxer__WEBPACK_IMPORTED_MODULE_0__.JsonAjaxer();\n  }\n\n  /**\n   * @param data response data\n   * @returns {Array.<Structure>}\n   */\n  structureResponseHandler(data) {\n    const structureFactory = new _models_StructureFactory__WEBPACK_IMPORTED_MODULE_1__.StructureFactory();\n    const structures = [];\n    const rawStructures = Array.isArray(data.Structure) ? data.Structure : [data.Structure];\n\n    for (let i = 0; i < rawStructures.length; i ++) {\n      structures[i] = structureFactory.make(rawStructures[i]);\n    }\n\n    return structures;\n  }\n\n  /**\n   * @returns {Promise<Structure[]>}\n   */\n  getStructures() {\n    return this.ajax.get(`${this.scheme}${this.domain}/api/di/Structure`)\n      .then(this.structureResponseHandler.bind(this));\n  }\n\n  /**\n   * @param {string} creator id\n   * @returns {Promise<Structure[]>}\n   */\n  getStructuresByCreator(creator) {\n    return this.ajax.get(`${this.scheme}${this.domain}/api/di/Structure/creator/${creator}`)\n      .then(this.structureResponseHandler.bind(this));\n  }\n\n  /**\n   * @param {string} structureId id\n   * @returns {Promise<Structure[]>}\n   */\n  getSingleStructure(structureId) {\n    return this.ajax.get(`${this.scheme}${this.domain}/api/di/Structure/${structureId}`)\n      .then(this.structureResponseHandler.bind(this));\n  }\n\n  /**\n   * @param searchString\n   * @returns {Promise<Structure[]>}\n   */\n  searchStructures(searchString) {\n    return this.ajax.get(`${this.scheme}${this.domain}/api/di/Structure/search/${encodeURIComponent(searchString)}`)\n      .then(this.structureResponseHandler.bind(this));\n  }\n\n  /**\n   * @param data response data\n   * @returns {Schematic[]}\n   */\n  schematicResponseHandler(data) {\n    const schematicFactory = new _models_SchematicFactory__WEBPACK_IMPORTED_MODULE_2__.SchematicFactory();\n    const schematics = [];\n    const rawSchematics = data.Schematic;\n\n    for (let i = 0; i < rawSchematics.length; i ++) {\n      schematics[i] = schematicFactory.make(rawSchematics[i]);\n    }\n\n    return schematics;\n  }\n\n  /**\n   * @param {string} creator id\n   * @returns {Promise<Schematic[]>}\n   */\n  getSchematicsByCreator(creator) {\n    return this.ajax.get(`${this.scheme}${this.domain}/api/di/Schematic/creator/${creator}`)\n      .then(this.schematicResponseHandler.bind(this));\n  }\n\n  /**\n   * @param {string} structureId\n   * @param {string} searchString\n   * @returns {Promise<Schematic[]>}\n   */\n  searchSchematicsByStructure(structureId, searchString) {\n    return this.ajax.get(`${this.scheme}${this.domain}/api/di/Schematic/search/${structureId}/${encodeURIComponent(searchString)}`)\n      .then(this.schematicResponseHandler.bind(this));\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/api/DroidApi.js?");

/***/ }),

/***/ "./src/js/art_rendering/SchematicPalette.js":
/*!**************************************************!*\
  !*** ./src/js/art_rendering/SchematicPalette.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SchematicPalette\": () => (/* binding */ SchematicPalette)\n/* harmony export */ });\n/* harmony import */ var _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/ColorRGB */ \"./src/js/vendor/ColorRGB.js\");\n\n\n/**\n * Generates palettes for schematics.\n */\nclass SchematicPalette {\n  constructor() {\n    this.outline = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(0,0,0);\n    this.backgroundOutline = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(38,38,38);\n  }\n\n  /**\n   * @param {ColorRGB} primaryColor\n   */\n  generatePaletteSwap(primaryColor) {\n    const baseColor = primaryColor.clampAvgBrightness(100, 180);\n    const newOutline = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 255, 255);\n    return [\n      [this.outline, newOutline],\n      [this.backgroundOutline, newOutline],\n      [newOutline, baseColor, 'EXCEPT_TARGET']\n    ];\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/art_rendering/SchematicPalette.js?");

/***/ }),

/***/ "./src/js/art_rendering/StructureArtGenerator.js":
/*!*******************************************************!*\
  !*** ./src/js/art_rendering/StructureArtGenerator.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StructureArtGenerator\": () => (/* binding */ StructureArtGenerator)\n/* harmony export */ });\n/**\n * Assembles the art for a structure or schematic using images and layers.\n */\nclass StructureArtGenerator {\n  constructor() {\n    this.imgDir = 'img/structures/';\n    this.backgroundsDir = 'backgrounds/';\n    this.mobileDir = 'mobile/';\n    this.staticDir = 'static/';\n  }\n\n  /* Backgrounds */\n  backgroundDefault(layers) {\n    layers.push(`${this.imgDir}${this.backgroundsDir}structure-bg-default.png`)\n  }\n  backgroundLand(layers, structure) {\n    if (structure.hasAmbitLand()) {\n      layers.push(`${this.imgDir}${this.backgroundsDir}structure-bg-land.png`);\n    }\n  }\n  backgroundSky(layers, structure) {\n    if (structure.hasAmbitSky()) {\n      layers.push(`${this.imgDir}${this.backgroundsDir}structure-bg-sky.png`);\n    }\n  }\n  backgroundSpace(layers, structure) {\n    if (structure.hasAmbitSpace()) {\n      layers.push(`${this.imgDir}${this.backgroundsDir}structure-bg-space.png`);\n    }\n  }\n  backgroundWater(layers, structure) {\n    if (structure.hasAmbitWater()) {\n      layers.push(`${this.imgDir}${this.backgroundsDir}structure-bg-water.png`);\n    }\n  }\n  backgroundLayerFilter(layers) {\n    layers.push(`${this.imgDir}${this.backgroundsDir}structure-bg-lighten-15.png`);\n  }\n\n  /* Mobile Structure Base */\n  mobileStructureChassis(layers) {\n    layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-chassis.png`);\n  }\n\n  /* Mobile Structure Ambit Parts */\n  mobileStructureLand(layers, structure) {\n    if (structure.hasAmbitLand()) {\n      layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-land.png`);\n    }\n  }\n  mobileStructureSky(layers, structure) {\n    if (structure.hasAmbitSky()) {\n      layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-sky.png`);\n      layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-space.png`);\n    }\n  }\n  mobileStructureSpace(layers, structure) {\n    if (structure.hasAmbitSpace()) {\n      layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-space.png`);\n    }\n  }\n  mobileStructureWater(layers, structure) {\n    if (structure.hasAmbitWater()) {\n      layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-water.png`);\n    }\n  }\n\n  /* Mobile Structure Feature Parts */\n  mobileStructureAttack(layers, structure) {\n    if (structure.hasFeatureAttack()) {\n      layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-attack.png`);\n    }\n  }\n  mobileStructureDefensive(layers, structure) {\n    if (structure.hasFeatureDefensive()) {\n      layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-defense.png`);\n    }\n  }\n  mobileStructureEngineering(layers, structure) {\n    if (structure.hasFeatureEngineering()) {\n      layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-engineering.png`);\n    }\n  }\n  mobileStructurePower(layers, structure) {\n    if (structure.hasFeaturePower()) {\n      layers.push(`${this.imgDir}${this.mobileDir}structure-mobile-power.png`);\n    }\n  }\n\n  mobileStructure(layers, structure) {\n    this.mobileStructureChassis(layers);\n\n    this.mobileStructureLand(layers, structure);\n    this.mobileStructureSky(layers, structure);\n    this.mobileStructureSpace(layers, structure);\n    this.mobileStructureWater(layers, structure);\n\n    this.mobileStructureAttack(layers, structure);\n    this.mobileStructureDefensive(layers, structure);\n    this.mobileStructureEngineering(layers, structure);\n    this.mobileStructurePower(layers, structure);\n  }\n\n  /* Static Structure Base */\n  staticStructureBuildings(layers) {\n    layers.push(`${this.imgDir}${this.staticDir}structure-static-buildings.png`);\n  }\n\n  /* Static Structure Ambit Parts */\n  staticStructureSky(layers, structure) {\n    if (structure.hasAmbitSky()) {\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-buildings-base.png`);\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-sky.png`);\n    }\n  }\n  staticStructureSpace(layers, structure) {\n    if (structure.hasAmbitSpace()) {\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-buildings-base.png`);\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-space.png`);\n    }\n  }\n  staticStructureWater(layers, structure) {\n    if (structure.hasAmbitWater()) {\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-buildings-base.png`);\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-water.png`);\n    }\n  }\n\n  /* Static Structure Feature Parts */\n  staticStructureAttack(layers, structure) {\n    if (structure.hasFeatureAttack()) {\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-attack.png`);\n    }\n  }\n  staticStructureDefensive(layers, structure) {\n    if (structure.hasFeatureDefensive()) {\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-defense.png`);\n    }\n  }\n  staticStructureEngineering(layers, structure) {\n    if (structure.hasFeatureEngineering()) {\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-engineering.png`);\n    }\n  }\n  staticStructurePower(layers, structure) {\n    if (structure.hasFeaturePower()) {\n      layers.push(`${this.imgDir}${this.staticDir}structure-static-power.png`);\n    }\n  }\n\n  staticStructure(layers, structure) {\n    this.staticStructureBuildings(layers);\n\n    this.staticStructureSky(layers, structure);\n    this.staticStructureSpace(layers, structure);\n    this.staticStructureWater(layers, structure);\n\n    this.staticStructureAttack(layers, structure);\n    this.staticStructureDefensive(layers, structure);\n    this.staticStructureEngineering(layers, structure);\n    this.staticStructurePower(layers, structure);\n  }\n\n  /**\n   * Generate the art for a given structure or schematic.\n   * @param {Structure|Schematic} structure\n   */\n  generate(structure) {\n    let layers = [];\n    this.backgroundDefault(layers);\n    this.backgroundSpace(layers, structure);\n    this.backgroundSky(layers, structure);\n    this.backgroundLand(layers, structure);\n    this.backgroundWater(layers, structure);\n    this.backgroundLayerFilter(layers);\n    if (structure.isMobile()) {\n      this.mobileStructure(layers, structure);\n    } else {\n      this.staticStructure(layers, structure);\n    }\n    return layers;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/art_rendering/StructureArtGenerator.js?");

/***/ }),

/***/ "./src/js/art_rendering/StructureMobilePalette.js":
/*!********************************************************!*\
  !*** ./src/js/art_rendering/StructureMobilePalette.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StructureMobilePalette\": () => (/* binding */ StructureMobilePalette)\n/* harmony export */ });\n/* harmony import */ var _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/ColorRGB */ \"./src/js/vendor/ColorRGB.js\");\n/* harmony import */ var _models_StructureRanks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/StructureRanks */ \"./src/js/models/StructureRanks.js\");\n\n\n\n/**\n * Generates palettes for mobile structures.\n */\nclass StructureMobilePalette {\n  constructor() {\n    this.chassisTop = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 152, 0);\n    this.chassisBottom = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 87, 34);\n    this.waterFin = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 186, 0);\n    this.landTire = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(88, 88, 88);\n    this.landHubCap = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(192, 192, 192);\n    this.skyWing = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(244, 67, 54);\n    this.spaceFlameCore = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(254, 254, 254);\n    this.spaceInnerFlame = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 213, 79);\n    this.spaceOuterFlame = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 61, 0);\n    this.attackGunBarrel = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(158, 158, 158);\n    this.attackGunAccent = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 179, 0);\n    this.powerLightColor = [\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 251, 3),\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 252, 3),\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 253, 3),\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 254, 3),\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 255, 3)\n    ];\n    this.engineeringCraneArm = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(132, 175, 196);\n    this.engineeringCraneClaw = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(220, 232, 238);\n    this.defenseInnerShield = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(128, 216, 255);\n    this.defenseOuterShield = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(224, 247, 250);\n  }\n\n  /**\n   * @param {Array.<Array>} paletteSwap\n   * @param {ColorRGB} primaryColor\n   */\n  generateChassisPaletteSwap(paletteSwap, primaryColor) {\n    const adjustedColor = primaryColor.clampAvgBrightness(40, 255);\n    const shades = adjustedColor.getShades(2);\n    paletteSwap.push([this.chassisTop, shades[0]]);\n    paletteSwap.push([this.chassisBottom, shades[1]]);\n  }\n\n  /**\n   * @param {Array.<Array>} paletteSwap\n   * @param {ColorRGB} primaryColor\n   */\n  generateSkyPaletteSwap(paletteSwap, primaryColor) {\n    const adjustedColor = primaryColor.clampAvgBrightness(250, 255);\n    const shades = adjustedColor.getShades(2);\n    paletteSwap.push([this.skyWing, shades[1]]);\n  }\n\n  /**\n   * @param {Array.<Array>} paletteSwap\n   * @param {ColorRGB} primaryColor\n   */\n  generateWaterPaletteSwap(paletteSwap, primaryColor) {\n    const adjustedColor = primaryColor.clampAvgBrightness(250, 255);\n    const shades = adjustedColor.getShades(2);\n    paletteSwap.push([this.waterFin, shades[1]]);\n  }\n\n  /**\n   * @param {Array.<Array>} paletteSwap\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generateAttackPaletteSwap(paletteSwap, primaryColor, structure) {\n    const ranks = (new _models_StructureRanks__WEBPACK_IMPORTED_MODULE_1__.StructureRanks()).getAttackRanks();\n\n    let gunAccentColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 0, 0);\n    let gunBarrelColor = this.attackGunBarrel;\n    if (structure.getRangeAttack() > ranks.rankS) {\n      gunAccentColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 255, 255);\n      gunBarrelColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 255, 255);\n    } else if (structure.getRangeAttack() > ranks.rankA) {\n      gunAccentColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(0, 186, 255);\n    } else if (structure.getRangeAttack() > ranks.rankB) {\n      gunAccentColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(0, 255, 174);\n    } else if (structure.getRangeAttack() > ranks.rankC) {\n      gunAccentColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 252, 0);\n    } else if (structure.getRangeAttack() > ranks.rankD) {\n      gunAccentColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 179, 0);\n    }\n\n    paletteSwap.push([this.attackGunBarrel, gunBarrelColor]);\n    paletteSwap.push([this.attackGunAccent, gunAccentColor]);\n  }\n\n  /**\n   * @param {Array.<Array>} paletteSwap\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generateDefensivePaletteSwap(paletteSwap, primaryColor, structure) {\n    const complimentaryColor = primaryColor.getComplimentaryColor();\n    const adjustedColor = complimentaryColor.clampAvgBrightness(240, 255);\n    const shieldShades = adjustedColor.getShades(10);\n    const ranks = (new _models_StructureRanks__WEBPACK_IMPORTED_MODULE_1__.StructureRanks()).getDefensiveRanks();\n\n    let outerShieldColor = shieldShades[4];\n    let innerShieldColor = shieldShades[6];\n    if (structure.getRangeDefense() > ranks.rankS) {\n      outerShieldColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 255, 255);\n      innerShieldColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(40, 40, 40);\n    } else if (structure.getRangeDefense() > ranks.rankA) {\n      outerShieldColor = shieldShades[0];\n      innerShieldColor = shieldShades[2];\n    } else if (structure.getRangeDefense() > ranks.rankB) {\n      outerShieldColor = shieldShades[1];\n      innerShieldColor = shieldShades[3];\n    } else if (structure.getRangeDefense() > ranks.rankC) {\n      outerShieldColor = shieldShades[2];\n      innerShieldColor = shieldShades[4];\n    } else if (structure.getRangeDefense() > ranks.rankD) {\n      outerShieldColor = shieldShades[3];\n      innerShieldColor = shieldShades[5];\n    }\n\n    paletteSwap.push([this.defenseOuterShield, outerShieldColor]);\n    paletteSwap.push([this.defenseInnerShield, innerShieldColor]);\n  }\n\n  /**\n   * @param {Array.<Array>}paletteSwap\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generateEngineeringPaletteSwap(paletteSwap, primaryColor, structure) {\n    const ranks = (new _models_StructureRanks__WEBPACK_IMPORTED_MODULE_1__.StructureRanks()).getEngineeringRanks();\n\n    let color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(194, 15, 15);\n    if (structure.getBuildRate() > ranks.rankS) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(20, 20, 20);\n    } else if (structure.getBuildRate() > ranks.rankA) {\n      color = this.engineeringCraneArm;\n    } else if (structure.getBuildRate() > ranks.rankB) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(82, 148, 68);\n    } else if (structure.getBuildRate() > ranks.rankC) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(240, 198, 5);\n    } else if (structure.getBuildRate() > ranks.rankD) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(230, 124, 0);\n    }\n\n    paletteSwap.push([this.engineeringCraneArm, color]);\n  }\n\n  /**\n   * @param {Array.<Array>}paletteSwap\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generatePowerPaletteSwap(paletteSwap, primaryColor, structure) {\n    const maxSlots = 5;\n    const slots = Math.min(structure.getChargingSlotCount(), maxSlots);\n    const offSlots = maxSlots - slots;\n    for (let i = 0; i < offSlots; i++) {\n      paletteSwap.push([this.powerLightColor[i], new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(20, 44, 0)]);\n    }\n  }\n\n  /**\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generatePaletteSwap(primaryColor, structure) {\n    const paletteSwap = [];\n    this.generateChassisPaletteSwap(paletteSwap, primaryColor);\n    this.generateSkyPaletteSwap(paletteSwap, primaryColor);\n    this.generateWaterPaletteSwap(paletteSwap, primaryColor);\n    this.generateAttackPaletteSwap(paletteSwap, primaryColor, structure);\n    this.generateDefensivePaletteSwap(paletteSwap, primaryColor, structure);\n    this.generateEngineeringPaletteSwap(paletteSwap, primaryColor, structure);\n    this.generatePowerPaletteSwap(paletteSwap, primaryColor, structure);\n    return paletteSwap;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/art_rendering/StructureMobilePalette.js?");

/***/ }),

/***/ "./src/js/art_rendering/StructureStaticPalette.js":
/*!********************************************************!*\
  !*** ./src/js/art_rendering/StructureStaticPalette.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StructureStaticPalette\": () => (/* binding */ StructureStaticPalette)\n/* harmony export */ });\n/* harmony import */ var _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/ColorRGB */ \"./src/js/vendor/ColorRGB.js\");\n/* harmony import */ var _models_StructureRanks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/StructureRanks */ \"./src/js/models/StructureRanks.js\");\n\n\n\n/**\n * Generates palettes for static structures.\n */\nclass StructureStaticPalette {\n  constructor() {\n    this.buildingsLeft = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(224, 224, 224);\n    this.buildingsCenterLeft = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(158, 158, 158);\n    this.buildingsCenter = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(238, 238, 238);\n    this.buildingsCenterStripe = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(85, 85, 85);\n    this.buildingsCenterRight = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(224, 224, 224);\n    this.buildingsRight = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(189, 189, 189);\n    this.buildingsBaseTop = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(176, 190, 197);\n    this.buildingsBaseBottom = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(96, 125, 139);\n    this.skyInnerFlame = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 235, 59);\n    this.skyOuterFlame = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(213, 0, 0);\n    this.defenseInnerShield = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(128, 216, 255);\n    this.defenseOuterShield = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(224, 247, 250);\n    this.powerLightColor = [\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 251, 3),\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 252, 3),\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 253, 3),\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 254, 3),\n      new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(118, 255, 3)\n    ];\n    this.engineeringCraneTower = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 193, 7);\n    this.engineeringCraneClaw = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(147, 147, 135);\n    this.attackTurret = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(124, 146, 90);\n  }\n\n  /**\n   * @param {Array.<Array>}paletteSwap\n   * @param {ColorRGB} primaryColor\n   */\n  generateBuildingsPaletteSwap(paletteSwap, primaryColor) {\n    const newMainColor = this.buildingsCenter.mixColors(primaryColor, 0.60);\n    const shades = newMainColor.getShades(5);\n    paletteSwap.push([this.buildingsCenter, shades[0]]);\n    paletteSwap.push([this.buildingsLeft, shades[1]]);\n    paletteSwap.push([this.buildingsRight, shades[2]]);\n    paletteSwap.push([this.buildingsCenterLeft, shades[3]]);\n    paletteSwap.push([this.buildingsCenterStripe, shades[4]]);\n  }\n\n  /**\n   * @param {Array.<Array>}paletteSwap\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generateAttackPaletteSwap(paletteSwap, primaryColor, structure) {\n    const ranks = (new _models_StructureRanks__WEBPACK_IMPORTED_MODULE_1__.StructureRanks()).getAttackRanks();\n\n    let color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(146, 131, 90);\n    if (structure.getRangeAttack() > ranks.rankS) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 255, 255);\n    } else if (structure.getRangeAttack() > ranks.rankA) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(90, 112, 146);\n    } else if (structure.getRangeAttack() > ranks.rankB) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(90, 140, 146);\n    } else if (structure.getRangeAttack() > ranks.rankC) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(90, 146, 120);\n    } else if (structure.getRangeAttack() > ranks.rankD) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(124, 146, 90);\n    }\n\n    paletteSwap.push([this.attackTurret, color]);\n  }\n\n  /**\n   * @param {Array.<Array>}paletteSwap\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generateDefensivePaletteSwap(paletteSwap, primaryColor, structure) {\n    const complimentaryColor = primaryColor.getComplimentaryColor();\n    const adjustedColor = complimentaryColor.clampAvgBrightness(240, 255);\n    const shieldShades = adjustedColor.getShades(10);\n    const ranks = (new _models_StructureRanks__WEBPACK_IMPORTED_MODULE_1__.StructureRanks()).getDefensiveRanks();\n\n    let outerShieldColor = shieldShades[4];\n    let innerShieldColor = shieldShades[6];\n    if (structure.getRangeDefense() > ranks.rankS) {\n      outerShieldColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(255, 255, 255);\n      innerShieldColor = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(40, 40, 40);\n    } else if (structure.getRangeDefense() > ranks.rankA) {\n      outerShieldColor = shieldShades[0];\n      innerShieldColor = shieldShades[2];\n    } else if (structure.getRangeDefense() > ranks.rankB) {\n      outerShieldColor = shieldShades[1];\n      innerShieldColor = shieldShades[3];\n    } else if (structure.getRangeDefense() > ranks.rankC) {\n      outerShieldColor = shieldShades[2];\n      innerShieldColor = shieldShades[4];\n    } else if (structure.getRangeDefense() > ranks.rankD) {\n      outerShieldColor = shieldShades[3];\n      innerShieldColor = shieldShades[5];\n    }\n\n    paletteSwap.push([this.defenseOuterShield, outerShieldColor]);\n    paletteSwap.push([this.defenseInnerShield, innerShieldColor]);\n  }\n\n  /**\n   * @param {Array.<Array>}paletteSwap\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generateEngineeringPaletteSwap(paletteSwap, primaryColor, structure) {\n    const ranks = (new _models_StructureRanks__WEBPACK_IMPORTED_MODULE_1__.StructureRanks()).getEngineeringRanks();\n\n    let color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(194, 15, 15);\n    if (structure.getBuildRate() > ranks.rankS) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(20, 20, 20);\n    } else if (structure.getBuildRate() > ranks.rankA) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(31, 11, 229);\n    } else if (structure.getBuildRate() > ranks.rankB) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(82, 148, 68);\n    } else if (structure.getBuildRate() > ranks.rankC) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(240, 198, 5);\n    } else if (structure.getBuildRate() > ranks.rankD) {\n      color = new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(230, 124, 0);\n    }\n\n    paletteSwap.push([this.engineeringCraneTower, color]);\n  }\n\n  /**\n   * @param {Array.<Array>}paletteSwap\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generatePowerPaletteSwap(paletteSwap, primaryColor, structure) {\n    const maxSlots = 5;\n    const slots = Math.min(structure.getChargingSlotCount(), maxSlots);\n    const offSlots = maxSlots - slots;\n    for (let i = 0; i < offSlots; i++) {\n      paletteSwap.push([this.powerLightColor[i], new _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB(20, 44, 0)]);\n    }\n  }\n\n  /**\n   * @param {ColorRGB} primaryColor\n   * @param {Structure} structure\n   */\n  generatePaletteSwap(primaryColor, structure) {\n    const paletteSwap = [];\n    this.generateBuildingsPaletteSwap(paletteSwap, primaryColor);\n    this.generateAttackPaletteSwap(paletteSwap, primaryColor, structure);\n    this.generateDefensivePaletteSwap(paletteSwap, primaryColor, structure);\n    this.generateEngineeringPaletteSwap(paletteSwap, primaryColor, structure);\n    this.generatePowerPaletteSwap(paletteSwap, primaryColor, structure);\n    return paletteSwap;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/art_rendering/StructureStaticPalette.js?");

/***/ }),

/***/ "./src/js/constants.js":
/*!*****************************!*\
  !*** ./src/js/constants.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AMBITS\": () => (/* binding */ AMBITS),\n/* harmony export */   \"FEATURES\": () => (/* binding */ FEATURES),\n/* harmony export */   \"CONFIG\": () => (/* binding */ CONFIG)\n/* harmony export */ });\nconst\n  AMBITS = {\n    LAND: 'LAND',\n    SKY: 'SKY',\n    SPACE: 'SPACE',\n    WATER: 'WATER',\n  },\n  FEATURES = {\n    ATTACK: 'ATTACK_SYSTEM',\n    DEFENSIVE: 'DEFENSIVE_SYSTEM',\n    ENGINEERING: 'ENGINEERING_SYSTEM',\n    POWER: 'POWER_SYSTEM',\n    STORAGE: 'STORAGE_SYSTEM'\n  },\n  CONFIG = {\n    INITIAL_HASHRATE: 100000\n  };\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/constants.js?");

/***/ }),

/***/ "./src/js/models/Schematic.js":
/*!************************************!*\
  !*** ./src/js/models/Schematic.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Schematic\": () => (/* binding */ Schematic)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./src/js/constants.js\");\n\n\n/**\n * Schematic Model\n */\nclass Schematic {\n  constructor() {\n    this.accuracy = 0;\n    this.ambits = [];\n    this.build_rate = 0;\n    this.capacity_max = 0;\n    this.charge_rate = 0;\n    this.charging_slot_count = 0;\n    this.creator = '';\n    this.description = '';\n    this.drain_rate = 0;\n    this.energy_efficiency = 0;\n    this.energy_to_build = {\n      amount: 0,\n      denom: ''\n    }\n    this.features = [];\n    this.generate_rate = 0;\n    this.hash ='';\n    this.health_max = 0;\n    this.id = '';\n    this.input = '';\n    this.is_mobile = false;\n    this.is_stationary = true;\n    this.mass = 0;\n    this.melee_attack = 0;\n    this.melee_defense = 0;\n    this.name = '';\n    this.owner = '';\n    this.primary_color = '';\n    this.range_attack = 0;\n    this.range_defense = 0;\n    this.restoration_rate = 0;\n    this.secondary_color = '';\n    this.speed = 0;\n    this.strength = 0;\n  }\n\n  /* Base Attributes */\n  getId() {\n    return this.id;\n  }\n  getHash() {\n    return this.hash;\n  }\n  getName() {\n    return this.name;\n  }\n  getDescription() {\n    return this.description;\n  }\n  getEnergyToBuildAmount() {\n    return this.energy_to_build.amount;\n  }\n  getEnergyToBuildDenom() {\n    return this.energy_to_build.denom;\n  }\n  getHealthMax() {\n    return this.health_max;\n  }\n  getAmbits() {\n    return this.ambits.join(', ');\n  }\n  getSpeed() {\n    return this.speed;\n  }\n  getAccuracy() {\n    return this.accuracy;\n  }\n  getMass() {\n    return this.mass;\n  }\n  getStrength() {\n    return this.strength;\n  }\n  getEnergyEfficiency() {\n    return this.energy_efficiency;\n  }\n  getPrimaryColor() {\n    return this.primary_color;\n  }\n\n  isMobile() {\n    return this.is_mobile;\n  }\n\n  hasAmbit(ambit) {\n    return this.ambits.includes(ambit);\n  }\n  hasAmbitLand() {\n    return this.hasAmbit(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.LAND);\n  }\n  hasAmbitSky() {\n    return this.hasAmbit(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.SKY);\n  }\n  hasAmbitSpace() {\n    return this.hasAmbit(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.SPACE);\n  }\n  hasAmbitWater() {\n    return this.hasAmbit(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.WATER);\n  }\n\n  hasFeature(feature) {\n    return this.features.includes(feature);\n  }\n  hasFeatureAttack() {\n    return this.hasFeature(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.ATTACK);\n  }\n  hasFeatureDefensive() {\n    return this.hasFeature(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.DEFENSIVE);\n  }\n  hasFeatureEngineering() {\n    return this.hasFeature(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.ENGINEERING);\n  }\n  hasFeaturePower() {\n    return this.hasFeature(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.POWER);\n  }\n\n  /* Attack */\n  getMeleeAttack() {\n    return this.melee_attack;\n  }\n  getRangeAttack() {\n    return this.range_attack;\n  }\n\n  /* Defensive */\n  getMeleeDefense() {\n    return this.melee_defense;\n  }\n  getRangeDefense() {\n    return this.range_defense;\n  }\n\n  /* Engineering */\n  getBuildRate() {\n    return this.build_rate;\n  }\n  getRestorationRate() {\n    return this.restoration_rate;\n  }\n\n  /* Power */\n  getChargingSlotCount () {\n    return parseInt(this.charging_slot_count);\n  }\n  getGenerationRate() {\n    return this.generate_rate;\n  }\n  getChargeRate() {\n    return this.charge_rate;\n  }\n  getDrainRate() {\n    return this.drain_rate;\n  }\n\n  /* Build Schematic from Hash Rather than API */\n  schematicFromHash(hash) {\n\n    this.hash = hash;\n\n    this.is_mobile = hash.substring(16,17) == '1'\n    this.is_stationary = !this.is_mobile\n\n    this.energy_efficiency = parseInt(hash.substring(17,19), 16)\n    this.mass              = parseInt(hash.substring(19,21), 16)\n    this.strength          = parseInt(hash.substring(21,23), 16)\n    this.speed             = parseInt(hash.substring(23,25), 16)\n    this.accuracy          = parseInt(hash.substring(25,27), 16)\n\n\n    this.energy_to_build = { amount:( this.speed + this.accuracy + this.mass + this.strength), denom:\"watt\"}\n    \n    let hasEngineeringSystems = hash.substring(0,3) == \"111\"\n    let hasStorageSystems     = hash.substring(3,5) == \"11\"\n    let hasDefensiveSystems   = hash.substring(5,6) == \"1\" \n    let hasAttackSystems      = hash.substring(6,7) == \"1\"   \n    let hasPowerSystems       = hash.substring(7,8) == \"1\" \n    \n    \n    if (hasPowerSystems) {\n      this.features.push(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.POWER)\n    }\n\n    if (hasAttackSystems) {\n      this.features.push(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.ATTACK)\n    }\n\n    if (hasDefensiveSystems) {\n      this.features.push(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.DEFENSIVE)\n    }\n\n    if (hasStorageSystems) {\n      this.features.push(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.STORAGE)\n    }\n\n    if (hasEngineeringSystems) {\n      this.features.push(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.ENGINEERING)\n    }\n\n    let ambitSpace  = hash.substring(8,11)  == \"111\"\n    let ambitSky    = hash.substring(11,13) == \"11\"\n    let ambitWater  = hash.substring(13,15) == \"11\"\n    let ambitLand   = hash.substring(15,16) == \"1\"  \n\n    if (ambitLand) {\n      this.ambits.push(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.LAND)\n    }\n\n    if (ambitWater) {\n      this.ambits.push(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.WATER)\n    }\n\n    if (ambitSky) {\n      this.ambits.push(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.SKY)\n    }\n\n    if (ambitSpace) {\n      this.ambits.push(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.SPACE)\n    }\n\n    // These could theoretically be skipped if wanting to do faster \n    // hashing but for the sake of prettier pictures let's do it\n    if (this.mass == 0) { console.log('this schema sucks')}\n    if (this.strength == 0) { console.log('this schema sucks')}\n    if ((this.mass + this.accuracy) == 0) { console.log('this schema sucks')}\n    if ((this.mass + this.strength) == 0) { console.log('this schema sucks')}\n    if ((this.speed * this.accuracy) == 0)  { console.log('this schema sucks')}\n\n    if (this.is_mobile) {\n      this.melee_attack  = (this.strength * this.mass) % (this.speed * this.accuracy)\n\n      this.melee_defense = (this.strength + this.speed + this.accuracy)\n      this.range_defense = (this.strength + this.speed) % (this.mass + this.accuracy)\n    } else {\n      this.melee_attack  = 0\n\n      this.melee_defense = (this.strength + this.speed)\n      this.range_defense = (this.strength + this.speed) % this.mass\n    }\n\n    this.range_attack = (this.speed + this.accuracy)\n\n    if (hasPowerSystems) {\n      this.generate_rate = this.energy_efficiency + this.mass\n      this.charge_rate   = this.energy_efficiency * this.accuracy\n      this.drain_rate    = this.energy_efficiency * this.speed\n\n      this.charging_slot_count = (this.speed * this.energy_efficiency) % 5\n\n    } else {\n      this.generate_rate = 0\n      this.charge_rate   = 0\n      this.drain_rate    = 0\n\n      this.charging_slot_count = 0;\n    }\n\n    if (hasEngineeringSystems) {\n      this.build_rate       = (this.speed * this.accuracy) % (this.mass  + this.strength)\n      this.restoration_rate = (this.speed * this.accuracy) % this.strength\n    } else {\n      this.build_rate       = 0\n      this.restoration_rate = 0 \n    }\n\n    if (hasStorageSystems) {\n      this.capacity_max  = this.mass - this.strength  \n    } else {\n      this.capacity_max  = 0\n    }\n\n    this.health_max = this.mass + this.strength\n\n    this.primary_color   = hash.substring(52,58);\n    this.secondary_color = hash.substring(58,64);\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/models/Schematic.js?");

/***/ }),

/***/ "./src/js/models/SchematicFactory.js":
/*!*******************************************!*\
  !*** ./src/js/models/SchematicFactory.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SchematicFactory\": () => (/* binding */ SchematicFactory)\n/* harmony export */ });\n/* harmony import */ var _Schematic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Schematic */ \"./src/js/models/Schematic.js\");\n\n\nclass SchematicFactory {\n  make(obj) {\n    const structure = new _Schematic__WEBPACK_IMPORTED_MODULE_0__.Schematic();\n    Object.assign(structure, obj);\n    return structure;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/models/SchematicFactory.js?");

/***/ }),

/***/ "./src/js/models/Structure.js":
/*!************************************!*\
  !*** ./src/js/models/Structure.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Structure\": () => (/* binding */ Structure)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./src/js/constants.js\");\n\n\n/**\n * Structure Model\n */\nclass Structure {\n  constructor() {\n    this.accuracy = 0;\n    this.ambits = [];\n    this.battery = {\n      amount: 0,\n      denom: ''\n    };\n    this.build_rate = 0;\n    this.capacity_current = 0;\n    this.capacity_max = 0;\n    this.charge_rate = 0;\n    this.charging_slot = [];\n    this.charging_slot_count = 0;\n    this.creator = '';\n    this.description = '';\n    this.drain_rate = 0;\n    this.energy_efficiency = 0;\n    this.energy_to_build = {\n      amount: 0,\n      denom: ''\n    }\n    this.generate_rate = 0;\n    this.features = [];\n    this.hash ='';\n    this.health_current = 0;\n    this.health_max = 0;\n    this.id = '';\n    this.input = '';\n    this.is_mobile = false;\n    this.mass = 0;\n    this.melee_attack = 0;\n    this.melee_defense = 0;\n    this.name = '';\n    this.owner = '';\n    this.parent_id = '';\n    this.primary_color = '';\n    this.range_attack = 0;\n    this.range_defense = 0;\n    this.restoration_rate = 0;\n    this.schematic = '';\n    this.speed = 0;\n    this.storage = [];\n    this.strength = 0;\n    this.supervisor = '';\n  }\n\n  /* Base Attributes */\n  getId() {\n    return this.id;\n  }\n  getName() {\n    return this.name;\n  }\n  getDescription() {\n    return this.description;\n  }\n  getCreator() {\n    return this.creator;\n  }\n  getHealthCurrent() {\n    return this.health_current;\n  }\n  getHealthMax() {\n    return this.health_max;\n  }\n  getBatteryAmount() {\n    return this.battery.amount;\n  }\n  getBatteryDenom() {\n    return this.battery.denom;\n  }\n  getAmbits() {\n    return this.ambits.join(', ');\n  }\n  getSpeed() {\n    return this.speed;\n  }\n  getAccuracy() {\n    return this.accuracy;\n  }\n  getMass() {\n    return this.mass;\n  }\n  getStrength() {\n    return this.strength;\n  }\n  getEnergyEfficiency() {\n    return this.energy_efficiency;\n  }\n  getPrimaryColor() {\n    return this.primary_color;\n  }\n\n  isMobile() {\n    return this.is_mobile;\n  }\n\n  hasAmbit(ambit) {\n    return this.ambits.includes(ambit);\n  }\n  hasAmbitLand() {\n    return this.hasAmbit(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.LAND);\n  }\n  hasAmbitSky() {\n    return this.hasAmbit(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.SKY);\n  }\n  hasAmbitSpace() {\n    return this.hasAmbit(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.SPACE);\n  }\n  hasAmbitWater() {\n    return this.hasAmbit(_constants__WEBPACK_IMPORTED_MODULE_0__.AMBITS.WATER);\n  }\n\n  hasFeature(feature) {\n    return this.features.includes(feature);\n  }\n  hasFeatureAttack() {\n    return this.hasFeature(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.ATTACK);\n  }\n  hasFeatureDefensive() {\n    return this.hasFeature(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.DEFENSIVE);\n  }\n  hasFeatureEngineering() {\n    return this.hasFeature(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.ENGINEERING);\n  }\n  hasFeaturePower() {\n    return this.hasFeature(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.POWER);\n  }\n  hasFeatureStorage() {\n    return this.hasFeature(_constants__WEBPACK_IMPORTED_MODULE_0__.FEATURES.STORAGE);\n  }\n\n  /* Attack */\n  getMeleeAttack() {\n    return this.melee_attack;\n  }\n  getRangeAttack() {\n    return this.range_attack;\n  }\n\n  /* Defensive */\n  getMeleeDefense() {\n    return this.melee_defense;\n  }\n  getRangeDefense() {\n    return this.range_defense;\n  }\n\n  /* Engineering */\n  getBuildRate() {\n    return this.build_rate;\n  }\n  getRestorationRate() {\n    return this.restoration_rate;\n  }\n\n  /* Power */\n  getChargingSlotCount () {\n    return parseInt(this.charging_slot_count);\n  }\n  getGenerationRate() {\n    return this.generate_rate;\n  }\n  getChargeRate() {\n    return this.charge_rate;\n  }\n  getDrainRate() {\n    return this.drain_rate;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/models/Structure.js?");

/***/ }),

/***/ "./src/js/models/StructureFactory.js":
/*!*******************************************!*\
  !*** ./src/js/models/StructureFactory.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StructureFactory\": () => (/* binding */ StructureFactory)\n/* harmony export */ });\n/* harmony import */ var _Structure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Structure */ \"./src/js/models/Structure.js\");\n\n\nclass StructureFactory {\n  make(obj) {\n    const structure = new _Structure__WEBPACK_IMPORTED_MODULE_0__.Structure();\n    Object.assign(structure, obj);\n    return structure;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/models/StructureFactory.js?");

/***/ }),

/***/ "./src/js/models/StructureRanks.js":
/*!*****************************************!*\
  !*** ./src/js/models/StructureRanks.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StructureRanks\": () => (/* binding */ StructureRanks)\n/* harmony export */ });\n/* harmony import */ var _vendor_Ranks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/Ranks */ \"./src/js/vendor/Ranks.js\");\n\n\nclass StructureRanks {\n  constructor() {\n    this.accuracyMax = 255;\n    this.energyEfficiencyMax = 255;\n    this.massMax = 255;\n    this.speedMax = 255;\n    this.strengthMax = 255;\n  }\n\n  // Based on range attack max\n  getAttackRanks() {\n    return _vendor_Ranks__WEBPACK_IMPORTED_MODULE_0__.Ranks.make(this.speedMax + this.accuracyMax);\n  }\n\n  // Based on range defense max\n  getDefensiveRanks() {\n    return _vendor_Ranks__WEBPACK_IMPORTED_MODULE_0__.Ranks.make(this.massMax + this.accuracyMax);\n  }\n\n  // Based on build rate max\n  getEngineeringRanks() {\n    return _vendor_Ranks__WEBPACK_IMPORTED_MODULE_0__.Ranks.make(this.massMax + this.strengthMax);\n  }\n\n  // Based on generate rate max\n  getPowerRanks() {\n    return _vendor_Ranks__WEBPACK_IMPORTED_MODULE_0__.Ranks.make(this.energyEfficiencyMax + this.massMax);\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/models/StructureRanks.js?");

/***/ }),

/***/ "./src/js/pages/common/Navbar.js":
/*!***************************************!*\
  !*** ./src/js/pages/common/Navbar.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Navbar\": () => (/* binding */ Navbar)\n/* harmony export */ });\nclass Navbar {\n  constructor(page, options = {}) {\n    this.page = page.toUpperCase();\n    this.searchEnabled = options.hasOwnProperty('searchEnabled') && options.searchEnabled;\n  }\n  render() {\n    return `\n      <nav class=\"main-nav navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div class=\"container-fluid\">\n          <a class=\"navbar-brand\" href=\"/index.html\">Structs</a>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li class=\"nav-item mx-2\">\n                <a class=\"nav-link ${ this.page === 'R&D' ? 'active' : '' }\" href=\"/research.html\">R&D</a>\n              </li>\n              <li class=\"nav-item mx-2\">\n                <a class=\"nav-link ${ this.page === 'SCHEMATICS' ? 'active' : '' }\" href=\"/schematics.html\">Schematics</a>\n              </li>\n              <li class=\"nav-item mx-2\">\n                <a class=\"nav-link ${ this.page === 'STRUCTURES' ? 'active' : '' }\" href=\"/structures.html\">Structures</a>\n              </li>\n            </ul>\n            ${this.searchEnabled ? `\n              <div class=\"d-flex\">\n                <input id=\"nav-search-input\" class=\"form-control me-2 nes-input is-dark\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n                <button id=\"nav-search-btn\" class=\"btn btn-outline-success nes-btn is-primary\" type=\"button\">Search</button>\n              </div>\n            ` : ''}\n          </div>\n        </div>\n      </nav>\n    `;\n  }\n  init(id) {\n    const navWrapper = document.getElementById(id);\n    navWrapper.innerHTML = this.render();\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/pages/common/Navbar.js?");

/***/ }),

/***/ "./src/js/pages/indexPage.js":
/*!***********************************!*\
  !*** ./src/js/pages/indexPage.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ui_DroidUI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ui/DroidUI */ \"./src/js/ui/DroidUI.js\");\n/* harmony import */ var _common_Navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/Navbar */ \"./src/js/pages/common/Navbar.js\");\n\n\n\nconst page = 'index';\n\nconst navbar = new _common_Navbar__WEBPACK_IMPORTED_MODULE_1__.Navbar(page, { searchEnabled: true });\nnavbar.init('nav-wrapper');\n\nconst droidUi = new _ui_DroidUI__WEBPACK_IMPORTED_MODULE_0__.DroidUI();\ndroidUi.loadStructures( 'structures-list', 'battery1qs40zuw73uyjtc6j90mkyff43tyc9eh3cgvrxm');\n\nconst searchHandler = function() {\n  const searchString = document.getElementById('nav-search-input').value;\n  droidUi.searchAndLoadStructures('structures-list', searchString, 'battery1qs40zuw73uyjtc6j90mkyff43tyc9eh3cgvrxm');\n};\n\ndocument.getElementById('nav-search-btn').addEventListener('click', searchHandler);\ndocument.getElementById('nav-search-input').addEventListener('keypress', (event) => {\n  if (event.key === 'Enter') {\n    searchHandler(event);\n  }\n});\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/pages/indexPage.js?");

/***/ }),

/***/ "./src/js/ui/DroidUI.js":
/*!******************************!*\
  !*** ./src/js/ui/DroidUI.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidUI\": () => (/* binding */ DroidUI)\n/* harmony export */ });\n/* harmony import */ var _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/ColorRGB */ \"./src/js/vendor/ColorRGB.js\");\n/* harmony import */ var _api_DroidApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../api/DroidApi */ \"./src/js/api/DroidApi.js\");\n/* harmony import */ var _components_DroidUIMessagePanel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/DroidUIMessagePanel */ \"./src/js/ui/components/DroidUIMessagePanel.js\");\n/* harmony import */ var _components_DroidUISchematic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/DroidUISchematic */ \"./src/js/ui/components/DroidUISchematic.js\");\n/* harmony import */ var _components_DroidUINewSchematic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/DroidUINewSchematic */ \"./src/js/ui/components/DroidUINewSchematic.js\");\n/* harmony import */ var _components_DroidUISchematicListItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/DroidUISchematicListItem */ \"./src/js/ui/components/DroidUISchematicListItem.js\");\n/* harmony import */ var _components_DroidUIStructure__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/DroidUIStructure */ \"./src/js/ui/components/DroidUIStructure.js\");\n/* harmony import */ var _components_DroidUIStructureCommandView__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/DroidUIStructureCommandView */ \"./src/js/ui/components/DroidUIStructureCommandView.js\");\n/* harmony import */ var _vendor_PixelArtViewer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../vendor/PixelArtViewer */ \"./src/js/vendor/PixelArtViewer.js\");\n/* harmony import */ var _art_rendering_SchematicPalette__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../art_rendering/SchematicPalette */ \"./src/js/art_rendering/SchematicPalette.js\");\n/* harmony import */ var _art_rendering_StructureArtGenerator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../art_rendering/StructureArtGenerator */ \"./src/js/art_rendering/StructureArtGenerator.js\");\n/* harmony import */ var _art_rendering_StructureMobilePalette__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../art_rendering/StructureMobilePalette */ \"./src/js/art_rendering/StructureMobilePalette.js\");\n/* harmony import */ var _art_rendering_StructureStaticPalette__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../art_rendering/StructureStaticPalette */ \"./src/js/art_rendering/StructureStaticPalette.js\");\n/* harmony import */ var _components_DroidUIMessageListItem__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/DroidUIMessageListItem */ \"./src/js/ui/components/DroidUIMessageListItem.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Web App\n */\nclass DroidUI {\n\n  /**\n   * @param {DroidApi} droidApi\n   * @param {StructureArtGenerator} structureArtGenerator\n   * @param {StructureMobilePalette} structureMobilePalette\n   * @param {StructureStaticPalette} structureStaticPalette\n   * @param {SchematicPalette} schematicPalette\n   */\n  constructor(\n    droidApi = new _api_DroidApi__WEBPACK_IMPORTED_MODULE_1__.DroidApi('http://', 'droid.sh'),\n    structureArtGenerator = new _art_rendering_StructureArtGenerator__WEBPACK_IMPORTED_MODULE_10__.StructureArtGenerator(),\n    structureMobilePalette = new _art_rendering_StructureMobilePalette__WEBPACK_IMPORTED_MODULE_11__.StructureMobilePalette(),\n    structureStaticPalette = new _art_rendering_StructureStaticPalette__WEBPACK_IMPORTED_MODULE_12__.StructureStaticPalette(),\n    schematicPalette = new _art_rendering_SchematicPalette__WEBPACK_IMPORTED_MODULE_9__.SchematicPalette()\n  ) {\n    this.droidApi = droidApi;\n    this.structureArtGenerator = structureArtGenerator;\n    this.structureMobilePalette = structureMobilePalette;\n    this.structureStaticPalette = structureStaticPalette;\n    this.schematicPalette = schematicPalette;\n    this.structures = [];\n    this.schematics = [];\n  }\n\n  /**\n   * @param {Structure} structure\n   */\n  getStructurePalette(structure) {\n    let palette;\n    const primaryColor = _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB.hexToRgb(structure.getPrimaryColor());\n    if (structure.isMobile() === true) {\n      palette = this.structureMobilePalette.generatePaletteSwap(primaryColor, structure);\n    } else {\n      palette = this.structureStaticPalette.generatePaletteSwap(primaryColor, structure);\n    }\n    return palette;\n  }\n\n  /**\n   * @param {Schematic} schematic\n   */\n  getSchematicPalette(schematic) {\n    const primaryColor = _vendor_ColorRGB__WEBPACK_IMPORTED_MODULE_0__.ColorRGB.hexToRgb(schematic.getPrimaryColor());\n    return this.schematicPalette.generatePaletteSwap(primaryColor);\n  }\n\n  /**\n   * @param {Array.<Structure>}structures\n   * @param {string} targetElementId\n   * @param {string} creator\n   * @param {DroidUIMessagePanel} emptyMessage\n   */\n  handleLoadStructures(structures, targetElementId, creator = '', emptyMessage = null) {\n    this.structures = [];\n    const targetElement = document.getElementById(targetElementId);\n    let structuresHtml = '';\n\n    for (let i = 0; i < structures.length; i++) {\n      const droidUIStructure = new _components_DroidUIStructure__WEBPACK_IMPORTED_MODULE_6__.DroidUIStructure(structures[i], creator);\n\n      // Batch drawing by collecting all the HTML first\n      structuresHtml += droidUIStructure.render();\n\n      this.structures[i] = {\n        'structure': structures[i],\n        'droidUIStructure': droidUIStructure,\n        'layers': this.structureArtGenerator.generate(structures[i]),\n      }\n    }\n\n    // Update DOM\n    if (structuresHtml === '' && emptyMessage !== null) {\n      structuresHtml = emptyMessage.render();\n    }\n    targetElement.innerHTML = structuresHtml;\n\n    for (let i = 0; i < this.structures.length; i++) {\n      /** @type {HTMLCanvasElement} */\n      const canvas = document.getElementById(this.structures[i].droidUIStructure.getCanvasId());\n      new _vendor_PixelArtViewer__WEBPACK_IMPORTED_MODULE_8__.PixelArtViewer(canvas, this.structures[i].layers, this.getStructurePalette(this.structures[i].structure));\n    }\n  }\n\n  /**\n   * @param {Structure} structure\n   * @param {string} targetElementId\n   * @param {string} creator\n   */\n  handleLoadSingleStructure(structure, targetElementId, creator = '') {\n    const targetElement = document.getElementById(targetElementId);\n    const layers = this.structureArtGenerator.generate(structure);\n    const droidUIStructureCommandView = new _components_DroidUIStructureCommandView__WEBPACK_IMPORTED_MODULE_7__.DroidUIStructureCommandView(structure, creator);\n\n    this.structures[0] = {\n      'structure': structure,\n      'droidUIStructureCommandView': droidUIStructureCommandView,\n      'layers': this.structureArtGenerator.generate(structure),\n    }\n\n    targetElement.innerHTML = droidUIStructureCommandView.render();\n    droidUIStructureCommandView.initMainMenuEventListeners();\n\n    /** @type {HTMLCanvasElement} */\n    const canvas = document.getElementById(droidUIStructureCommandView.getCanvasId());\n    new _vendor_PixelArtViewer__WEBPACK_IMPORTED_MODULE_8__.PixelArtViewer(canvas, layers, this.getStructurePalette(structure));\n  }\n\n  /**\n   * Load all structures and display them in the target element.\n   *\n   * @param {string} targetElementId\n   * @param {string} creator\n   */\n  loadStructures(targetElementId, creator = '') {\n    this.droidApi.getStructures().then((structures) => {\n      this.handleLoadStructures(structures, targetElementId, creator, new _components_DroidUIMessagePanel__WEBPACK_IMPORTED_MODULE_2__.DroidUIMessagePanel(\n        'No Structures Available',\n        `Whoops, an error occurred and the Genesis Library has gone missing.`\n      ));\n    });\n  }\n\n  /**\n   * Load structures by the given creator and display them in the target element.\n   *\n   * @param {string} targetElementId\n   * @param {string} creator id\n   */\n  loadStructuresByCreator(targetElementId, creator) {\n    this.droidApi.getStructuresByCreator(creator).then((structures) => {\n      this.handleLoadStructures(structures, targetElementId, creator, new _components_DroidUIMessagePanel__WEBPACK_IMPORTED_MODULE_2__.DroidUIMessagePanel(\n        'No Structures Available',\n        `You don't own any structures. Use the Genesis Library structure and a schematic to create your first structure.`\n      ));\n    });\n  }\n\n  /**\n   * Load structure a by structure ID.\n   *\n   * @param {string} targetElementId\n   * @param {string} structureId\n   * @param {string} creator\n   */\n  loadSingleStructure(targetElementId, structureId, creator = '') {\n    this.droidApi.getSingleStructure(structureId).then((structures) => {\n      this.handleLoadSingleStructure(structures.shift(), targetElementId, creator);\n    });\n  }\n\n  /**\n   * Load structures that match the given search string and display them in the target element.\n   *\n   * @param {string} targetElementId\n   * @param {string} searchString\n   * @param {string} creator\n   */\n  searchAndLoadStructures(targetElementId, searchString,  creator = '') {\n    this.droidApi.searchStructures(searchString).then((structures) => {\n      this.handleLoadStructures(structures, targetElementId, creator, new _components_DroidUIMessagePanel__WEBPACK_IMPORTED_MODULE_2__.DroidUIMessagePanel(\n        'No Structures Found',\n        `No structures found matching your search terms. Try using less or different keywords.`\n      ));\n    });\n  }\n\n  /**\n   * Load schematics by the given creator and display them in the target element.\n   *\n   * @param {string} targetElementId\n   * @param {string} creator id\n   */\n  loadSchematicsByCreator(targetElementId, creator) {\n    const targetElement = document.getElementById(targetElementId);\n\n    let schematicsHtml = '';\n\n    this.droidApi.getSchematicsByCreator(creator).then(schematics => {\n      for (let i = 0; i < schematics.length; i++) {\n        const droidUISchematic = new _components_DroidUISchematic__WEBPACK_IMPORTED_MODULE_3__.DroidUISchematic(schematics[i]);\n\n        // Batch drawing by collecting all the HTML first\n        schematicsHtml += droidUISchematic.render();\n\n        this.schematics[i] = {\n          'schematic': schematics[i],\n          'droidUISchematic': droidUISchematic,\n          'layers': this.structureArtGenerator.generate(schematics[i]),\n        }\n      }\n\n      // Update DOM\n      if (schematicsHtml === '') {\n        const emptyMessage = new _components_DroidUIMessagePanel__WEBPACK_IMPORTED_MODULE_2__.DroidUIMessagePanel(\n          'No Schematics Available',\n          `You don't own any schematics. To create a schematic go to R&D.`\n        );\n        schematicsHtml = emptyMessage.render();\n      }\n      targetElement.innerHTML = schematicsHtml;\n\n      for (let i = 0; i < this.schematics.length; i++) {\n        /** @type {HTMLCanvasElement} */\n        const canvas = document.getElementById(this.schematics[i].droidUISchematic.getCanvasId());\n        new _vendor_PixelArtViewer__WEBPACK_IMPORTED_MODULE_8__.PixelArtViewer(canvas, this.schematics[i].layers, this.getSchematicPalette(this.schematics[i].schematic));\n      }\n    });\n  }\n\n  /**\n   * @param {string} schematicsHtml\n   * @param {string} searchString\n   * @returns {string}\n   */\n  schematicSelectionListOutputHelper(schematicsHtml, searchString) {\n    if (schematicsHtml === '' && searchString === '') {\n      const emptyMessage = new _components_DroidUIMessageListItem__WEBPACK_IMPORTED_MODULE_13__.DroidUIMessageListItem(\n        `There are no compatible schematics for this structure.`\n        + ` A compatible schematic must have one ambit (water, land, sky, or space) in common with the current structure.`\n      );\n      schematicsHtml = emptyMessage.render();\n    } else if (schematicsHtml === '' && searchString !== '') {\n      const emptyMessage = new _components_DroidUIMessageListItem__WEBPACK_IMPORTED_MODULE_13__.DroidUIMessageListItem(\n        `No compatible schematics found matching your search terms. Try using less or different keywords.`\n      );\n      schematicsHtml = emptyMessage.render();\n    }\n    return schematicsHtml;\n  }\n\n  /**\n   * @param {string} targetElementId\n   * @param {string} targetElementTitleId\n   * @param {string} structureId\n   * @param {string} searchString\n   */\n  loadSchematicSelectionList(targetElementId, targetElementTitleId, structureId, searchString = '') {\n    const targetElement = document.getElementById(targetElementId);\n    const targetElementTitle = document.getElementById(`${targetElementTitleId}`);\n    targetElementTitle.innerHTML = 'Select Schematic';\n\n    let schematicsHtml = '';\n\n    this.droidApi.searchSchematicsByStructure(structureId, searchString).then(schematics => {\n      for (let i = 0; i < schematics.length; i++) {\n        const droidUISchematicListItem = new _components_DroidUISchematicListItem__WEBPACK_IMPORTED_MODULE_5__.DroidUISchematicListItem(schematics[i]);\n\n        // Batch drawing by collecting all the HTML first\n        schematicsHtml += droidUISchematicListItem.render();\n\n        this.schematics[i] = {\n          'schematic': schematics[i],\n          'droidUISchematicListItem': droidUISchematicListItem,\n          'layers': this.structureArtGenerator.generate(schematics[i]),\n        }\n      }\n\n      // Update DOM\n      targetElement.innerHTML = this.schematicSelectionListOutputHelper(schematicsHtml, searchString);\n\n      for (let i = 0; i < this.schematics.length; i++) {\n        /** @type {HTMLCanvasElement} */\n        const canvas = document.getElementById(this.schematics[i].droidUISchematicListItem.getCanvasId());\n        new _vendor_PixelArtViewer__WEBPACK_IMPORTED_MODULE_8__.PixelArtViewer(canvas, this.schematics[i].layers, this.getSchematicPalette(this.schematics[i].schematic));\n      }\n    });\n  }\n\n  /**\n   * Load new schematic as generated during the R&D process\n   *\n   * @param {Schematic} schematic\n   * @param {string} targetElementId\n   */\n  loadNewSchematic(schematic, targetElementId) {\n    const targetElement = document.getElementById(targetElementId);\n\n    let schematicsHtml = '';\n\n    const droidUINewSchematic = new _components_DroidUINewSchematic__WEBPACK_IMPORTED_MODULE_4__.DroidUINewSchematic(schematic);\n    schematicsHtml += droidUINewSchematic.render();\n\n    this.schematics[0] = {\n      'schematic': schematic,\n      'droidUINewSchematic': droidUINewSchematic,\n      'layers': this.structureArtGenerator.generate(schematic),\n    }\n\n    // Update DOM\n    if (schematicsHtml === '') {\n      // We really shouldn't get here. \n      // Why are you calling loadNewSchematic without a new schematic?\n      const emptyMessage = new _components_DroidUIMessagePanel__WEBPACK_IMPORTED_MODULE_2__.DroidUIMessagePanel(\n        'No Schematics Available',\n        `You don't own any schematics. To create a schematic go to R&D.`\n      );\n      schematicsHtml = emptyMessage.render();\n    }\n    \n    targetElement.innerHTML = schematicsHtml;\n\n    /** @type {HTMLCanvasElement} */\n    const canvas = document.getElementById(this.schematics[0].droidUINewSchematic.getCanvasId());\n    new _vendor_PixelArtViewer__WEBPACK_IMPORTED_MODULE_8__.PixelArtViewer(canvas, this.schematics[0].layers, this.getSchematicPalette(this.schematics[0].schematic));\n      \n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/ui/DroidUI.js?");

/***/ }),

/***/ "./src/js/ui/components/DroidUICommandMenu.js":
/*!****************************************************!*\
  !*** ./src/js/ui/components/DroidUICommandMenu.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidUICommandMenu\": () => (/* binding */ DroidUICommandMenu)\n/* harmony export */ });\n/* harmony import */ var _DroidUI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../DroidUI */ \"./src/js/ui/DroidUI.js\");\n/**\n * Web UI component for structures.\n */\n\n\nclass DroidUICommandMenu {\n  /**\n   * @param {Structure} structure\n   */\n  constructor(structure) {\n    this.structure = structure;\n  }\n\n  renderMainMenu() {\n    return `\n      <div class=\"row\">\n        <div class=\"col\">\n            <a\n              id=\"attack-command\"\n              href=\"javascript:void(0)\"\n              class=\"nes-btn ${this.structure.hasFeatureAttack() ? 'is-disabled' : 'is-disabled' } nes-btn-fluid\"\n            >\n              Attack\n            </a>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n            <a\n              id=\"engineering-command\"\n              href=\"javascript:void(0)\"\n              class=\"nes-btn ${ this.structure.hasFeatureEngineering() ? 'is-warning' : 'is-disabled' } nes-btn-fluid\"\n            >\n              Engineer\n            </a>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n            <a\n              id=\"power-command\"\n              href=\"javascript:void(0)\"\n              class=\"nes-btn ${ this.structure.hasFeaturePower() ? 'is-disabled' : 'is-disabled' } nes-btn-fluid\"\n            >\n              Power\n            </a>\n        </div>\n      </div>\n    `;\n  }\n\n  renderEngineeringSubmenu() {\n    return `\n      <div class=\"row\">\n        <div class=\"col\">\n            <a\n              id=\"build-from-schematic-command\"\n              href=\"#offcanvas\"\n              class=\"nes-btn is-warning nes-btn-fluid\"\n              data-bs-toggle=\"offcanvas\"\n              role=\"button\"\n            >\n              Build from Schematic\n            </a>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n            <a\n              id=\"build-from-schematic-command\"\n              href=\"javascript:void(0)\"\n              class=\"nes-btn is-disabled nes-btn-fluid\"\n            >\n              Repair Target\n            </a>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n            <a\n              id=\"main-menu-command\"\n              href=\"javascript:void(0)\"\n              class=\"nes-btn nes-btn-fluid\"\n            >\n              Back\n            </a>\n        </div>\n      </div>\n    `;\n  }\n\n  initMainMenuEventListeners() {\n    if (this.structure.hasFeatureEngineering()) {\n      document.getElementById('engineering-command').addEventListener('click', function() {\n        const commandMenu = new DroidUICommandMenu(this.structure);\n        document.getElementById('command-container').innerHTML = commandMenu.renderEngineeringSubmenu();\n        commandMenu.initEngineeringSubmenuEventListeners();\n      }.bind(this));\n    }\n  }\n\n  initEngineeringSubmenuEventListeners() {\n    const droidUi = new _DroidUI__WEBPACK_IMPORTED_MODULE_0__.DroidUI();\n\n    const searchHandler = function() {\n      const searchString = document.getElementById('offcanvas-search-input').value;\n      droidUi.loadSchematicSelectionList(\n        'offcanvas-body',\n        'offcanvas-title',\n        this.structure.getId(),\n        searchString\n      );\n    }.bind(this);\n    document.getElementById('offcanvas-search-btn').addEventListener('click', searchHandler);\n    document.getElementById('offcanvas-search-input').addEventListener('keypress', (event) => {\n      if (event.key === 'Enter') {\n        searchHandler(event);\n      }\n    });\n\n    document.getElementById('build-from-schematic-command').addEventListener('click', function() {\n      droidUi.loadSchematicSelectionList('offcanvas-body', 'offcanvas-title', this.structure.getId());\n    }.bind(this));\n\n    document.getElementById('main-menu-command').addEventListener('click', function() {\n      const commandMenu = new DroidUICommandMenu(this.structure);\n      document.getElementById('command-container').innerHTML = commandMenu.renderMainMenu();\n      commandMenu.initMainMenuEventListeners();\n    }.bind(this));\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/ui/components/DroidUICommandMenu.js?");

/***/ }),

/***/ "./src/js/ui/components/DroidUIMessageListItem.js":
/*!********************************************************!*\
  !*** ./src/js/ui/components/DroidUIMessageListItem.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidUIMessageListItem\": () => (/* binding */ DroidUIMessageListItem)\n/* harmony export */ });\nclass DroidUIMessageListItem {\n\n  /**\n   * @param {string} message\n   */\n  constructor(message) {\n    this.message = message;\n  }\n  render() {\n    return `\n      <div class=\"structure-list-item container p-3\">\n        <div class=\"row\">\n          <div class=\"col\">${this.message}</div>\n        </div>\n      </div>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/ui/components/DroidUIMessageListItem.js?");

/***/ }),

/***/ "./src/js/ui/components/DroidUIMessagePanel.js":
/*!*****************************************************!*\
  !*** ./src/js/ui/components/DroidUIMessagePanel.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidUIMessagePanel\": () => (/* binding */ DroidUIMessagePanel)\n/* harmony export */ });\nclass DroidUIMessagePanel {\n  constructor(title, message) {\n    this.title = title;\n    this.message = message;\n  }\n  render() {\n    return `\n      <div class=\"message-panel-wrapper col\">\n        <div class=\"message-panel nes-container\">\n          <h2>${this.title}</h2>\n          <p>${this.message}</p>\n        </div>\n      </div>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/ui/components/DroidUIMessagePanel.js?");

/***/ }),

/***/ "./src/js/ui/components/DroidUINewSchematic.js":
/*!*****************************************************!*\
  !*** ./src/js/ui/components/DroidUINewSchematic.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidUINewSchematic\": () => (/* binding */ DroidUINewSchematic)\n/* harmony export */ });\n/**\n * Web UI component for newly designed schematic.\n */\nclass DroidUINewSchematic {\n  constructor(schematic, idPrefix = '') {\n    this.schematic = schematic;\n    this.idPrefix = idPrefix;\n  }\n  getCanvasId() {\n    return `${this.idPrefix}schematic-${this.schematic.getHash()}`;\n  }\n  render() {\n    return `\n      <div class=\"schematic-result-wrapper\">\n        <div class=\"nes-container schematic-result-card\">\n          <div class=\"new-schematic-asset-wrapper\">\n            <canvas id=\"${this.getCanvasId()}\" class=\"pixel-art-viewer\" width=\"64\" height=\"64\">\n              Your browser does not support the canvas element.\n            </canvas>\n          </div>\n         <div class=\"nes-container with-title container-fluid\">\n            <div class=\"row\">\n              <div class=\"nes-field col\">\n                <label for=\"new_schematic_name\">Name</label>\n                <input type=\"text\" id=\"new_schematic_name\" class=\"nes-input\" value=\"\" >\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"nes-field col\">\n                <label for=\"new_schematic_description\">Description</label>\n                <input type=\"text\" id=\"new_schematic_description\" class=\"nes-input\" value=\"\">\n              </div>\n            </div>\n            <div class=\"row solo-action-wrapper\">\n              <div class=\"col\">\n                <a href=\"javascript:void(0)\" class=\"nes-btn is-primary nes-btn-fluid\">Patent</a>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"nes-container with-title\">\n            <h3 class=\"title\">Attributes</h3>\n            <div class=\"details\">\n\n              <div><span class=\"attribute-label\">Ambits:</span>\n                ${this.schematic.hasAmbitWater() ? `\n                  <img src=\"/img/icons/icon-ambit-water.png\" alt=\"Water\" title=\"Water\"/> Water\n                ` : ''}\n                ${this.schematic.hasAmbitLand() ? `\n                  <img src=\"/img/icons/icon-ambit-land.png\" alt=\"Land\" title=\"Land\"/> Land\n                ` : ''}\n                ${this.schematic.hasAmbitSky() ? `\n                  <img src=\"/img/icons/icon-ambit-sky.png\" alt=\"Sky\" title=\"Sky\"/> Sky\n                ` : ''}\n                ${this.schematic.hasAmbitSpace() ? `\n                  <img src=\"/img/icons/icon-ambit-space.png\" alt=\"Space\" title=\"Space\"/> Space\n                ` : ''}\n              </div>\n              <div><span class=\"attribute-label\">Energy to Build:</span> Requires ${this.schematic.getEnergyToBuildAmount()} ${this.schematic.getEnergyToBuildDenom()}</div>\n              <br>\n              <div>\n                <img src=\"/img/icons/icon-health.png\" alt=\"Health Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Health:</span> ${this.schematic.getHealthMax()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-speed.png\" alt=\"Speed Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Speed:</span> ${this.schematic.getSpeed()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-accuracy.png\" alt=\"Accuracy Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Accuracy:</span> ${this.schematic.getAccuracy()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-mass.png\" alt=\"Mass Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Mass:</span> ${this.schematic.getMass()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-strength.png\" alt=\"Strength Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Strength:</span> ${this.schematic.getStrength()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-energy.png\" alt=\"Energy Efficiency Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Energy Efficiency:</span> ${this.schematic.getEnergyEfficiency()}\n              </div>\n            </div>\n          </div>\n          ${(this.schematic.hasFeatureAttack()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Attack Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-attack-melee.png\" alt=\"Melee Attack Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Melee Attack:</span> ${this.schematic.getMeleeAttack()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-attack-range.png\" alt=\"Range Attack Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Range Attack:</span> ${this.schematic.getRangeAttack()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.schematic.hasFeatureDefensive()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Defensive Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-def-melee.png\" alt=\"Melee Defense Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Melee Defense:</span> ${this.schematic.getMeleeDefense()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-def-range.png\" alt=\"Range Defense Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Range Defense:</span> ${this.schematic.getRangeDefense()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.schematic.hasFeatureEngineering()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Engineering Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-eng-build.png\" alt=\"Build Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Build Rate:</span> ${this.schematic.getBuildRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-eng-restoration.png\" alt=\"Restoration Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Restoration Rate:</span> ${this.schematic.getRestorationRate()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.schematic.hasFeaturePower()) ?\n            `<div class=\"nes-container with-title\">\n              <h3 class=\"title\">Power Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-power-generate.png\" alt=\"Generation Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Generation Rate:</span> ${this.schematic.getGenerationRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-power-charge.png\" alt=\"Charge Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Charge Rate:</span> ${this.schematic.getChargeRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-power-drain.png\" alt=\"Drain Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Drain Rate:</span> ${this.schematic.getDrainRate()}\n                </div>\n              </div>\n            </div>`\n          : ''}\n        </div>\n      </div>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/ui/components/DroidUINewSchematic.js?");

/***/ }),

/***/ "./src/js/ui/components/DroidUISchematic.js":
/*!**************************************************!*\
  !*** ./src/js/ui/components/DroidUISchematic.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidUISchematic\": () => (/* binding */ DroidUISchematic)\n/* harmony export */ });\n/**\n * Web UI component for schematic.\n */\nclass DroidUISchematic {\n  constructor(schematic, idPrefix = '') {\n    this.schematic = schematic;\n    this.idPrefix = idPrefix;\n  }\n  getCanvasId() {\n    return `${this.idPrefix}schematic-${this.schematic.getId()}`;\n  }\n  render() {\n    return `\n      <div class=\"structure-card-wrapper col-sm-12 col-md-6 col-lg-4 col-xl-3\">\n        <div class=\"nes-container structure-card\">\n          <div class=\"game-asset-wrapper\">\n            <canvas id=\"${this.getCanvasId()}\" class=\"pixel-art-viewer\" width=\"64\" height=\"64\">\n              Your browser does not support the canvas element.\n            </canvas>\n          </div>\n          <div class=\"nes-container with-title\">\n            <h3 class=\"title\">Attributes</h3>\n            <div class=\"details\">\n              <h4>${this.schematic.getName()}</h4>\n              <p>${this.schematic.getDescription()}</p>\n              <br>\n              <div><span class=\"attribute-label\">Structure ID:</span> ${this.schematic.getId()}</div>\n              <div><span class=\"attribute-label\">Ambits:</span>\n                ${this.schematic.hasAmbitWater() ? `\n                  <img src=\"/img/icons/icon-ambit-water.png\" alt=\"Water\" title=\"Water\"/> Water\n                ` : ''}\n                ${this.schematic.hasAmbitLand() ? `\n                  <img src=\"/img/icons/icon-ambit-land.png\" alt=\"Land\" title=\"Land\"/> Land\n                ` : ''}\n                ${this.schematic.hasAmbitSky() ? `\n                  <img src=\"/img/icons/icon-ambit-sky.png\" alt=\"Sky\" title=\"Sky\"/> Sky\n                ` : ''}\n                ${this.schematic.hasAmbitSpace() ? `\n                  <img src=\"/img/icons/icon-ambit-space.png\" alt=\"Space\" title=\"Space\"/> Space\n                ` : ''}\n              </div>\n              <div><span class=\"attribute-label\">Energy to Build:</span> Requires ${this.schematic.getEnergyToBuildAmount()} ${this.schematic.getEnergyToBuildDenom()}</div>\n              <br>\n              <div>\n                <img src=\"/img/icons/icon-health.png\" alt=\"Health Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Health:</span> ${this.schematic.getHealthMax()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-speed.png\" alt=\"Speed Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Speed:</span> ${this.schematic.getSpeed()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-accuracy.png\" alt=\"Accuracy Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Accuracy:</span> ${this.schematic.getAccuracy()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-mass.png\" alt=\"Mass Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Mass:</span> ${this.schematic.getMass()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-strength.png\" alt=\"Strength Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Strength:</span> ${this.schematic.getStrength()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-energy.png\" alt=\"Energy Efficiency Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Max Energy Efficiency:</span> ${this.schematic.getEnergyEfficiency()}\n              </div>\n            </div>\n          </div>\n          ${(this.schematic.hasFeatureAttack()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Attack Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-attack-melee.png\" alt=\"Melee Attack Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Melee Attack:</span> ${this.schematic.getMeleeAttack()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-attack-range.png\" alt=\"Range Attack Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Range Attack:</span> ${this.schematic.getRangeAttack()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.schematic.hasFeatureDefensive()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Defensive Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-def-melee.png\" alt=\"Melee Defense Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Melee Defense:</span> ${this.schematic.getMeleeDefense()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-def-range.png\" alt=\"Range Defense Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Range Defense:</span> ${this.schematic.getRangeDefense()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.schematic.hasFeatureEngineering()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Engineering Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-eng-build.png\" alt=\"Build Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Build Rate:</span> ${this.schematic.getBuildRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-eng-restoration.png\" alt=\"Restoration Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Restoration Rate:</span> ${this.schematic.getRestorationRate()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.schematic.hasFeaturePower()) ?\n            `<div class=\"nes-container with-title\">\n              <h3 class=\"title\">Power Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-power-generate.png\" alt=\"Generation Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Generation Rate:</span> ${this.schematic.getGenerationRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-power-charge.png\" alt=\"Charge Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Charge Rate:</span> ${this.schematic.getChargeRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-power-drain.png\" alt=\"Drain Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Max Drain Rate:</span> ${this.schematic.getDrainRate()}\n                </div>\n              </div>\n            </div>`\n          : ''}\n        </div>\n      </div>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/ui/components/DroidUISchematic.js?");

/***/ }),

/***/ "./src/js/ui/components/DroidUISchematicListItem.js":
/*!**********************************************************!*\
  !*** ./src/js/ui/components/DroidUISchematicListItem.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidUISchematicListItem\": () => (/* binding */ DroidUISchematicListItem)\n/* harmony export */ });\nclass DroidUISchematicListItem {\n\n  /**\n   * @param {Schematic} schematic\n   * @param {string} idPrefix\n   */\n  constructor(schematic, idPrefix = '') {\n    this.schematic = schematic;\n    this.idPrefix = idPrefix;\n  }\n  getCanvasId() {\n    return `${this.idPrefix}schematic-list-item-${this.schematic.getId()}`;\n  }\n  render() {\n    return `\n      <div class=\"structure-list-item container text-center p-2\">\n        <div class=\"row gx-2 mb-2\">\n          <div class=\"col-auto\">\n            <div class=\"game-asset-wrapper\">\n              <canvas id=\"${this.getCanvasId()}\" class=\"pixel-art-viewer\" width=\"64\" height=\"64\">\n                Your browser does not support the canvas element.\n              </canvas>\n            </div>\n          </div>\n          <div class=\"col text-start text-truncate\">\n            <div class=\"row\">\n              <div class=\"col-auto text-truncate\">\n                <span class=\"attribute-label\">ID:</span> ${this.schematic.getId()}\n              </div>\n              <div class=\"col text-end\">\n                ${this.schematic.hasAmbitWater() ? `\n                  <img src=\"/img/icons/icon-ambit-water.png\" alt=\"Water\" title=\"Water\"/>\n                ` : ''}\n                ${this.schematic.hasAmbitLand() ? `\n                  <img src=\"/img/icons/icon-ambit-land.png\" alt=\"Land\" title=\"Land\"/>\n                ` : ''}\n                ${this.schematic.hasAmbitSky() ? `\n                  <img src=\"/img/icons/icon-ambit-sky.png\" alt=\"Sky\" title=\"Sky\"/>\n                ` : ''}\n                ${this.schematic.hasAmbitSpace() ? `\n                  <img src=\"/img/icons/icon-ambit-space.png\" alt=\"Space\" title=\"Space\"/>\n                ` : ''}\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col text-truncate\">\n                <span class=\"attribute-label\">Name:</span> ${this.schematic.getName()} - ${this.schematic.getDescription()}\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col text-truncate\">\n                <span class=\"attribute-label\">Requires:</span> ${this.schematic.getEnergyToBuildAmount()} ${this.schematic.getEnergyToBuildDenom()}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row gx-2\">\n          <div class=\"col-2\">\n            <div>\n              <img src=\"/img/icons/icon-health.png\" alt=\"Health Icon\" title=\"Max Health\" class=\"structure-list-icon\">\n            </div>\n            <div>${this.schematic.getHealthMax()}</div>\n          </div>\n          <div class=\"col-2\">\n            <div>\n              <img src=\"/img/icons/icon-speed.png\" alt=\"Speed Icon\" title=\"Max Speed\" class=\"structure-list-icon\">\n            </div>\n            <div>${this.schematic.getSpeed()}</div>\n          </div>\n          <div class=\"col-2\">\n            <div>\n              <img src=\"/img/icons/icon-accuracy.png\" alt=\"Accuracy Icon\" title=\"Max Accuracy\" class=\"structure-list-icon\">\n            </div>\n            <div>${this.schematic.getAccuracy()}</div>\n          </div>\n          <div class=\"col-2\">\n            <div>\n              <img src=\"/img/icons/icon-mass.png\" alt=\"Mass Icon\" title=\"Max Mass\" class=\"structure-list-icon\">\n            </div>\n            <div>${this.schematic.getMass()}</div>\n          </div>\n          <div class=\"col-2\">\n            <div>\n              <img src=\"/img/icons/icon-strength.png\" alt=\"Strength Icon\" title=\"Max Strength\" class=\"structure-list-icon\">\n            </div>\n            <div>${this.schematic.getStrength()}</div>\n          </div>\n          <div class=\"col-2\">\n            <div>\n              <img src=\"/img/icons/icon-energy.png\" alt=\"Energy Efficiency Icon\" title=\"Max Energy Efficiency\" class=\"structure-list-icon\">\n            </div>\n            <div>${this.schematic.getEnergyEfficiency()}</div>\n          </div>\n        </div>\n        <div class=\"row gx-2\">\n          ${this.schematic.hasFeatureAttack() ? `\n            <div class=\"col-2\">\n              <div>\n                <img src=\"/img/icons/icon-attack-melee.png\" alt=\"Melee Attack Icon\" title=\"Max Melee Attack\" class=\"structure-list-icon\">\n              </div>\n              <div>${this.schematic.getMeleeAttack()}</div>\n            </div>\n            <div class=\"col-2\">\n              <div>\n                <img src=\"/img/icons/icon-attack-range.png\" alt=\"Range Attack Icon\" title=\"Max Range Attack\" class=\"structure-list-icon\">\n              </div>\n              <div>${this.schematic.getRangeAttack()}</div>\n            </div>\n          ` : ''}\n          ${this.schematic.hasFeatureDefensive() ? `\n            <div class=\"col-2\">\n              <div>\n                <img src=\"/img/icons/icon-def-melee.png\" alt=\"Melee Defense Icon\" title=\"Max Melee Defense\" class=\"structure-list-icon\">\n              </div>\n              <div>${this.schematic.getMeleeDefense()}</div>\n            </div>\n            <div class=\"col-2\">\n              <div>\n                <img src=\"/img/icons/icon-def-range.png\" alt=\"Range Defense Icon\" title=\"Max Range Defense\" class=\"structure-list-icon\">\n              </div>\n              <div>${this.schematic.getRangeDefense()}</div>\n            </div>\n          ` : ''}\n          ${this.schematic.hasFeatureEngineering() ? `\n            <div class=\"col-2\">\n              <div>\n                <img src=\"/img/icons/icon-eng-build.png\" alt=\"Build Icon\" title=\"Max Build Rate\" class=\"structure-list-icon\">\n              </div>\n              <div>${this.schematic.getBuildRate()}</div>\n            </div>\n            <div class=\"col-2\">\n              <div>\n                <img src=\"/img/icons/icon-eng-restoration.png\" alt=\"Restoration Icon\" title=\"Max Restoration Rate\" class=\"structure-list-icon\">\n              </div>\n              <div>${this.schematic.getRestorationRate()}</div>\n            </div>\n          ` : ''}\n        </div>\n        <div class=\"row gx-2 mt-2\">\n          <div class=\"col\">\n            <a href=\"#\" class=\"nes-btn nes-btn-fluid is-warning\">Build</a>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/ui/components/DroidUISchematicListItem.js?");

/***/ }),

/***/ "./src/js/ui/components/DroidUIStructure.js":
/*!**************************************************!*\
  !*** ./src/js/ui/components/DroidUIStructure.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidUIStructure\": () => (/* binding */ DroidUIStructure)\n/* harmony export */ });\n/**\n * Web UI component for structures.\n */\nclass DroidUIStructure {\n  /**\n   *\n   * @param {Structure} structure\n   * @param {string} creator\n   * @param {string} idPrefix\n   */\n  constructor(structure, creator = '', idPrefix = '') {\n    this.structure = structure;\n    this.creator = creator;\n    this.idPrefix = idPrefix;\n  }\n  getCanvasId() {\n    return `${this.idPrefix}structure-${this.structure.getId()}`;\n  }\n  isCreator() {\n    return  this.structure.getCreator() === '' || this.structure.getCreator() === this.creator;\n  }\n  render() {\n    return `\n      <div class=\"structure-card-wrapper col-sm-12 col-md-6 col-lg-4 col-xl-3\">\n        <div class=\"nes-container structure-card\">\n          <div class=\"game-asset-wrapper\">\n            <canvas id=\"${this.getCanvasId()}\" class=\"pixel-art-viewer\" width=\"64\" height=\"64\">\n              Your browser does not support the canvas element.\n            </canvas>\n          </div>\n          <div class=\"row solo-action-wrapper\">\n            <div class=\"col\">\n                <a\n                  href=\"/structure.html?structure_id=${this.structure.getId()}\"\n                  class=\"nes-btn ${this.isCreator() ? 'is-primary' : ''} nes-btn-fluid\"\n                >\n                    ${this.isCreator() ? 'Command' : 'View'}\n                </a>\n            </div>\n          </div>\n          <div class=\"nes-container with-title\">\n            <h3 class=\"title\">Attributes</h3>\n            <div class=\"details\">\n              <h4>${this.structure.getName()}</h4>\n              <p>${this.structure.getDescription()}</p>\n              <br>\n              <div><span class=\"attribute-label\">Structure ID:</span> ${this.structure.getId()}</div>\n              <div><span class=\"attribute-label\">Ambits:</span>\n                ${this.structure.hasAmbitWater() ? `\n                  <img src=\"/img/icons/icon-ambit-water.png\" alt=\"Water\" title=\"Water\"/> Water\n                ` : ''}\n                ${this.structure.hasAmbitLand() ? `\n                  <img src=\"/img/icons/icon-ambit-land.png\" alt=\"Land\" title=\"Land\"/> Land\n                ` : ''}\n                ${this.structure.hasAmbitSky() ? `\n                  <img src=\"/img/icons/icon-ambit-sky.png\" alt=\"Sky\" title=\"Sky\"/> Sky\n                ` : ''}\n                ${this.structure.hasAmbitSpace() ? `\n                  <img src=\"/img/icons/icon-ambit-space.png\" alt=\"Space\" title=\"Space\"/> Space\n                ` : ''}\n              </div>\n              <br>\n              <div>\n                <img src=\"/img/icons/icon-health.png\" alt=\"Health Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Health:</span> ${this.structure.getHealthCurrent()} / ${this.structure.getHealthMax()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-battery-charge.png\" alt=\"Battery Charge Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Battery Charge:</span> ${this.structure.getBatteryAmount()} ${this.structure.getBatteryDenom()}\n              </div>\n              <br>\n              <div>\n                <img src=\"/img/icons/icon-speed.png\" alt=\"Speed Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Speed:</span> ${this.structure.getSpeed()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-accuracy.png\" alt=\"Accuracy Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Accuracy:</span> ${this.structure.getAccuracy()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-mass.png\" alt=\"Mass Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Mass:</span> ${this.structure.getMass()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-strength.png\" alt=\"Strength Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Strength:</span> ${this.structure.getStrength()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-energy.png\" alt=\"Energy Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Energy Efficiency:</span> ${this.structure.getEnergyEfficiency()}\n              </div>\n            </div>\n          </div>\n          ${(this.structure.hasFeatureAttack()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Attack Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-attack-melee.png\" alt=\"Melee Attack Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Melee Attack:</span> ${this.structure.getMeleeAttack()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-attack-range.png\" alt=\"Range Attack Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Range Attack:</span> ${this.structure.getRangeAttack()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.structure.hasFeatureDefensive()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Defensive Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-def-melee.png\" alt=\"Melee Defense Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Melee Defense:</span> ${this.structure.getMeleeDefense()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-def-range.png\" alt=\"Range Defense Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Range Defense:</span> ${this.structure.getRangeDefense()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.structure.hasFeatureEngineering()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Engineering Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-eng-build.png\" alt=\"Build Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Build Rate:</span> ${this.structure.getBuildRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-eng-restoration.png\" alt=\"Restoration Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Restoration Rate:</span> ${this.structure.getRestorationRate()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.structure.hasFeaturePower()) ?\n            `<div class=\"nes-container with-title\">\n              <h3 class=\"title\">Power Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-power-generate.png\" alt=\"Generation Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Generation Rate:</span> ${this.structure.getGenerationRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-power-charge.png\" alt=\"Charge Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Charge Rate:</span> ${this.structure.getChargeRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-power-drain.png\" alt=\"Drain Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Drain Rate:</span> ${this.structure.getDrainRate()}\n                </div>\n              </div>\n            </div>`\n          : ''}\n        </div>\n      </div>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/ui/components/DroidUIStructure.js?");

/***/ }),

/***/ "./src/js/ui/components/DroidUIStructureCommandView.js":
/*!*************************************************************!*\
  !*** ./src/js/ui/components/DroidUIStructureCommandView.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DroidUIStructureCommandView\": () => (/* binding */ DroidUIStructureCommandView)\n/* harmony export */ });\n/* harmony import */ var _DroidUICommandMenu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DroidUICommandMenu */ \"./src/js/ui/components/DroidUICommandMenu.js\");\n/**\n * Web UI component for structures.\n */\n\n\nclass DroidUIStructureCommandView {\n  /**\n   *\n   * @param {Structure} structure\n   * @param {string} creator\n   * @param {string} idPrefix\n   */\n  constructor(structure, creator = '', idPrefix = '') {\n    this.structure = structure;\n    this.creator = creator;\n    this.idPrefix = idPrefix;\n    this.droidUICommandMenu = new _DroidUICommandMenu__WEBPACK_IMPORTED_MODULE_0__.DroidUICommandMenu(structure);\n  }\n\n  getCanvasId() {\n    return `${this.idPrefix}structure-${this.structure.getId()}`;\n  }\n\n  isCreator() {\n    return  this.structure.getCreator() === '' || this.structure.getCreator() === this.creator;\n  }\n\n  initMainMenuEventListeners() {\n    if (this.isCreator()) {\n      const commandMenu = new _DroidUICommandMenu__WEBPACK_IMPORTED_MODULE_0__.DroidUICommandMenu(this.structure);\n      commandMenu.initMainMenuEventListeners();\n    }\n  }\n\n  render() {\n    return `\n      <div class=\"structure-card-wrapper col-sm-12 col-md-6 col-lg-4\">\n        <div class=\"nes-container structure-card\">\n          <div class=\"game-asset-wrapper\">\n            <canvas id=\"${this.getCanvasId()}\" class=\"pixel-art-viewer\" width=\"64\" height=\"64\">\n              Your browser does not support the canvas element.\n            </canvas>\n          </div>\n          ${this.isCreator() ? `\n            <div class=\"commands nes-container with-title\">\n              <h3 class=\"title\">Command Menu</h3>\n              <div id=\"command-container\">\n                ${this.droidUICommandMenu.renderMainMenu()}\n              </div>\n            </div>\n          ` : `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Structure</h3>\n              <div class=\"details\">\n                <h4>${this.structure.getName()}</h4>\n                <p>${this.structure.getDescription()}</p>\n              </div>\n            </div>\n          `}\n        </div>\n      </div>\n      <div class=\"structure-card-wrapper col-sm-12 col-md-6 col-lg-4\">\n        <div class=\"nes-container structure-card\">\n          <div class=\"nes-container with-title\">\n            <h3 class=\"title\">Attributes</h3>\n            <div class=\"details\">\n              ${this.isCreator() ? `\n                <h4>${this.structure.getName()}</h4>\n                <p>${this.structure.getDescription()}</p>\n              ` : ''}\n              <br>\n              <div><span class=\"attribute-label\">Structure ID:</span> ${this.structure.getId()}</div>\n              <div><span class=\"attribute-label\">Ambits:</span>\n                ${this.structure.hasAmbitWater() ? `\n                  <img src=\"/img/icons/icon-ambit-water.png\" alt=\"Water\" title=\"Water\"/> Water\n                ` : ''}\n                ${this.structure.hasAmbitLand() ? `\n                  <img src=\"/img/icons/icon-ambit-land.png\" alt=\"Land\" title=\"Land\"/> Land\n                ` : ''}\n                ${this.structure.hasAmbitSky() ? `\n                  <img src=\"/img/icons/icon-ambit-sky.png\" alt=\"Sky\" title=\"Sky\"/> Sky\n                ` : ''}\n                ${this.structure.hasAmbitSpace() ? `\n                  <img src=\"/img/icons/icon-ambit-space.png\" alt=\"Space\" title=\"Space\"/> Space\n                ` : ''}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-health.png\" alt=\"Health Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Health:</span> ${this.structure.getHealthCurrent()} / ${this.structure.getHealthMax()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-battery-charge.png\" alt=\"Battery Charge Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Battery Charge:</span> ${this.structure.getBatteryAmount()} ${this.structure.getBatteryDenom()}\n              </div>\n              <br>\n              <div>\n                <img src=\"/img/icons/icon-speed.png\" alt=\"Speed Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Speed:</span> ${this.structure.getSpeed()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-accuracy.png\" alt=\"Accuracy Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Accuracy:</span> ${this.structure.getAccuracy()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-mass.png\" alt=\"Mass Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Mass:</span> ${this.structure.getMass()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-strength.png\" alt=\"Strength Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Strength:</span> ${this.structure.getStrength()}\n              </div>\n              <div>\n                <img src=\"/img/icons/icon-energy.png\" alt=\"Energy Icon\" class=\"structure-card-icon\">\n                <span class=\"attribute-label\">Energy Efficiency:</span> ${this.structure.getEnergyEfficiency()}\n              </div>\n            </div>\n          </div>\n          </div>\n      </div>\n      <div class=\"structure-card-wrapper col-sm-12 col-md-6 col-lg-4\">\n        <div class=\"nes-container structure-card\">\n          ${(this.structure.hasFeatureAttack()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Attack Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-attack-melee.png\" alt=\"Melee Attack Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Melee Attack:</span> ${this.structure.getMeleeAttack()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-attack-range.png\" alt=\"Range Attack Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Range Attack:</span> ${this.structure.getRangeAttack()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.structure.hasFeatureDefensive()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Defensive Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-def-melee.png\" alt=\"Melee Defense Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Melee Defense:</span> ${this.structure.getMeleeDefense()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-def-range.png\" alt=\"Range Defense Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Range Defense:</span> ${this.structure.getRangeDefense()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.structure.hasFeatureEngineering()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Engineering Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-eng-build.png\" alt=\"Build Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Build Rate:</span> ${this.structure.getBuildRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-eng-restoration.png\" alt=\"Restoration Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Restoration Rate:</span> ${this.structure.getRestorationRate()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n          ${(this.structure.hasFeaturePower()) ? `\n            <div class=\"nes-container with-title\">\n              <h3 class=\"title\">Power Systems</h3>\n              <div class=\"details\">\n                <div>\n                  <img src=\"/img/icons/icon-power-generate.png\" alt=\"Generation Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Generation Rate:</span> ${this.structure.getGenerationRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-power-charge.png\" alt=\"Charge Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Charge Rate:</span> ${this.structure.getChargeRate()}\n                </div>\n                <div>\n                  <img src=\"/img/icons/icon-power-drain.png\" alt=\"Drain Rate Icon\" class=\"structure-card-icon\">\n                  <span class=\"attribute-label\">Drain Rate:</span> ${this.structure.getDrainRate()}\n                </div>\n              </div>\n            </div>\n          ` : ''}\n        </div>\n      </div>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/ui/components/DroidUIStructureCommandView.js?");

/***/ }),

/***/ "./src/js/vendor/ColorRGB.js":
/*!***********************************!*\
  !*** ./src/js/vendor/ColorRGB.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ColorRGB\": () => (/* binding */ ColorRGB)\n/* harmony export */ });\n/**\n * Library for working with RGB colors\n */\nclass ColorRGB {\n  constructor(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  /**\n   * Return the RGB complimentary color for the given RGB color.\n   *\n   * @return {ColorRGB}\n   */\n  getComplimentaryColor() {\n    return new ColorRGB(\n      255 - this.r,\n      255 - this.g,\n      255 - this.b\n    );\n  }\n\n  /**\n   * Generate a grey based on the luminosity of the given color.\n   *\n   * @return {ColorRGB}\n   */\n  getGrey() {\n    const avg = Math.round((this.r + this.g + this.b) / 3);\n    return new ColorRGB(\n      avg,\n      avg,\n      avg\n    );\n  }\n\n  /**\n   * Mix a color into the current color.\n   *\n   * @param {ColorRGB} otherColor\n   * @param {number} ratio a number between 0 - 1, the amount of the other color to mix in.\n   */\n  mixColors(otherColor, ratio = 0.5) {\n    return new ColorRGB(\n      Math.round(this.r * (1 - ratio) + otherColor.r * ratio),\n      Math.round(this.g * (1 - ratio) + otherColor.g * ratio),\n      Math.round(this.b * (1 - ratio) + otherColor.b * ratio)\n    );\n  }\n\n  /**\n   * Get darker shades of the current color.\n   *\n   * @param {number} numShades the number of shades to generate\n   * @param {boolean} lightToDark whether or not the shades are ordered light to dark or from dark to light\n   * @return {Array.<ColorRGB>}\n   */\n  getShades(numShades, lightToDark = true) {\n    const shades = [];\n\n    for (let i = 0; i < numShades; i++) {\n      const numerator = lightToDark ? numShades - i : i + 1;\n      shades.push(new ColorRGB(\n        Math.round(this.r * (numerator / numShades)),\n        Math.round(this.g * (numerator / numShades)),\n        Math.round(this.b * (numerator / numShades))\n      ));\n    }\n    return shades;\n  }\n\n  /**\n   * Convert a hex color code to RGB.\n   *\n   * @param {string} hex color code\n   * @returns {ColorRGB}\n   */\n  static hexToRgb(hex) {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return new ColorRGB(\n      parseInt(result[1], 16),\n      parseInt(result[2], 16),\n      parseInt(result[3], 16)\n    );\n  }\n\n  /**\n   * Ensures that the color is within a certain range of brightness.\n   *\n   * @param {number} min\n   * @param {number} max\n   * @returns {ColorRGB}\n   */\n  clampAvgBrightness(min, max) {\n    if (min < 0 || max < 0 || min >= max) {\n      throw 'Invalid min or max';\n    }\n    const avg = (this.r + this.g + this.b) / 3;\n    let adjustment = 1;\n    if (avg < min) {\n      adjustment = min / avg;\n    } else if (avg > max) {\n      adjustment = max / avg;\n    }\n    return new ColorRGB(\n      Math.min(255, Math.max(0, Math.round(this.r * adjustment))),\n      Math.min(255, Math.max(0, Math.round(this.g * adjustment))),\n      Math.min(255, Math.max(0, Math.round(this.b * adjustment)))\n    );\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/vendor/ColorRGB.js?");

/***/ }),

/***/ "./src/js/vendor/JsonAjaxer.js":
/*!*************************************!*\
  !*** ./src/js/vendor/JsonAjaxer.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"JsonAjaxer\": () => (/* binding */ JsonAjaxer)\n/* harmony export */ });\n/**\n * Encapsulate and abstract HTTP request methods.\n */\nclass JsonAjaxer {\n  async get (url) {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow'\n    });\n    return response.json();\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/vendor/JsonAjaxer.js?");

/***/ }),

/***/ "./src/js/vendor/PixelArtViewer.js":
/*!*****************************************!*\
  !*** ./src/js/vendor/PixelArtViewer.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PixelArtViewer\": () => (/* binding */ PixelArtViewer)\n/* harmony export */ });\n/**\n * Graphics engine for rendering pixel art on the web.\n */\nclass PixelArtViewer {\n\n  /**\n   * @param {HTMLCanvasElement} canvas the target canvas that will become the viewer\n   * @param {Array.<string>} imageLayerPaths the paths to the images to render. Image layers are rendered in order.\n   * @param {Array.<Array>} palette list of colors to swap\n   */\n  constructor(canvas, imageLayerPaths, palette = []) {\n    this.canvas = canvas;\n    this.aspectRatio = canvas.height / canvas.width;\n    this.context = canvas.getContext(\"2d\");\n    this.imageLayerPaths = imageLayerPaths;\n    this.numImagesLoaded = 0;\n    this.layers = [];\n    this.palette = palette;\n\n    this.lockAspectRatio();\n    this.loadAndRenderImageLayers();\n  }\n\n  /**\n   * Locks the aspect ratio so that the aspect ratio is maintained even if the image is responsively resized.\n   */\n  lockAspectRatio() {\n    this.canvas.height = this.canvas.width * this.aspectRatio;\n  }\n\n  /**\n   * Check that all images have been loaded. Used before rendering to reduce re-renders.\n   * @returns {boolean}\n   */\n  areAllImagesLoaded() {\n    return this.numImagesLoaded === this.imageLayerPaths.length;\n  }\n\n  /**\n   * Loads and renders the image layers in the order defined by the image paths.\n   */\n  loadAndRenderImageLayers() {\n    for(let i = 0; i < this.imageLayerPaths.length; i++) {\n      const img = new Image();\n      const viewer = this;\n      img.onload = () => {\n        viewer.numImagesLoaded++;\n        if (viewer.areAllImagesLoaded()) {\n          viewer.render();\n        }\n      }\n      img.src = this.imageLayerPaths[i];\n      this.layers[i] = img;\n    }\n  }\n\n  /**\n   * Draw all image layers to the canvas in order.\n   */\n  render() {\n    this.clearCanvas();\n    for(let i = 0; i < this.layers.length; i++) {\n      this.context.drawImage(this.layers[i], 0, 0);\n    }\n    this.swapColors(this.palette);\n  }\n\n  /**\n   * Given an array of color pairs, swap the first color with the second color in the canvas.\n   * Modes:\n   *   DEFAULT - Swaps the first color with the second color\n   *   EXCEPT_TARGET - Swaps all colors except the first color with the second color\n   * @param {Array.<Array>} colorSwapList\n   */\n  swapColors(colorSwapList) {\n    const imageData = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    const data = imageData.data;\n    for (let i = 0; i < data.length; i += 4) {\n      for (let j = 0; j < colorSwapList.length; j++) {\n        const targetColor = colorSwapList[j][0];\n        const newColor = colorSwapList[j][1];\n        let swapMode = 'DEFAULT';\n        if (colorSwapList[j].length > 2 && colorSwapList[j][2] === 'EXCEPT_TARGET') {\n          swapMode = 'EXCEPT_TARGET';\n        }\n        const red = data[i];\n        const green = data[i + 1];\n        const blue = data[i + 2];\n        if (\n          swapMode === 'DEFAULT' && red === targetColor.r && green === targetColor.g && blue === targetColor.b ||\n          swapMode === 'EXCEPT_TARGET' && (red !== targetColor.r || green !== targetColor.g || blue !== targetColor.b)\n        ) {\n          data[i]     = newColor.r; // red\n          data[i + 1] = newColor.g; // green\n          data[i + 2] = newColor.b; // blue\n        }\n      }\n    }\n    this.context.putImageData(imageData, 0, 0);\n  }\n\n  clearCanvas() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/vendor/PixelArtViewer.js?");

/***/ }),

/***/ "./src/js/vendor/Ranks.js":
/*!********************************!*\
  !*** ./src/js/vendor/Ranks.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ranks\": () => (/* binding */ Ranks)\n/* harmony export */ });\nclass Ranks {\n  constructor(\n    rankS,\n    rankA,\n    rankB,\n    rankC,\n    rankD,\n    rankF,\n  ) {\n    this.rankS = rankS;\n    this.rankA = rankA;\n    this.rankB = rankB;\n    this.rankC = rankC;\n    this.rankD = rankD;\n    this.rankF = rankF;\n  }\n\n  static make(max) {\n    return new Ranks(\n      max - (max * 0.02),\n      max - (max * 0.16),\n      max - (max * 0.50),\n      max - (max * 0.84),\n      max - (max * 0.98),\n      0\n    );\n  }\n}\n\n\n//# sourceURL=webpack://coindroids-v5-ui/./src/js/vendor/Ranks.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/pages/indexPage.js");
/******/ 	
/******/ })()
;