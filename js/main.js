(()=>{"use strict";class t{constructor(t,e,s){this.r=t,this.g=e,this.b=s}getComplimentaryColor(){return new t(255-this.r,255-this.g,255-this.b)}getGrey(){const e=Math.round((this.r+this.g+this.b)/3);return new t(e,e,e)}mixColors(e,s=.5){return new t(Math.round(this.r*(1-s)+e.r*s),Math.round(this.g*(1-s)+e.g*s),Math.round(this.b*(1-s)+e.b*s))}getShades(e,s=!0){const i=[];for(let r=0;r<e;r++){const a=s?e-r:r+1;i.push(new t(Math.round(this.r*(a/e)),Math.round(this.g*(a/e)),Math.round(this.b*(a/e))))}return i}static hexToRgb(e){e=e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,((t,e,s,i)=>e+e+s+s+i+i));const s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return new t(parseInt(s[1],16),parseInt(s[2],16),parseInt(s[3],16))}clampAvgBrightness(e,s){if(e<0||s<0||e>=s)throw"Invalid min or max";const i=(this.r+this.g+this.b)/3;let r=1;return i<e?r=e/i:i>s&&(r=s/i),new t(Math.round(this.r*r),Math.round(this.g*r),Math.round(this.b*r))}}class e{async get(t){return(await fetch(t,{method:"GET",headers:{"Content-Type":"application/json"},redirect:"follow"})).json()}}class s{constructor(){this.accuracy=0,this.ambits=[],this.battery={amount:0,denom:""},this.build_rate=0,this.capacity_current=0,this.capacity_max=0,this.charge_rate=0,this.charging_slot=[],this.charging_slot_count=0,this.creator="",this.description="",this.drain_rate=0,this.energy_efficiency=0,this.energy_to_build={amount:0,denom:""},this.generate_rate=0,this.features=[],this.hash="",this.health_current=0,this.health_max=0,this.id="",this.input="",this.is_mobile=!1,this.mass=0,this.melee_attack=0,this.melee_defense=0,this.name="",this.owner="",this.parent_id="",this.primary_color="",this.range_attack=0,this.range_defense=0,this.restoration_rate=0,this.schematic="",this.speed=0,this.storage=[],this.strength=0,this.supervisor=""}getId(){return this.id}getName(){return this.name}getDescription(){return this.description}getHealthCurrent(){return this.health_current}getHealthMax(){return this.health_max}getBatteryAmount(){return this.battery.amount}getBatteryDenom(){return this.battery.denom}getAmbits(){return this.ambits.join(", ")}getSpeed(){return this.speed}getAccuracy(){return this.accuracy}getMass(){return this.mass}getStrength(){return this.strength}getEnergyEfficiency(){return this.energy_efficiency}getPrimaryColor(){return this.primary_color}isMobile(){return this.is_mobile}hasAmbit(t){return this.ambits.includes(t)}hasAmbitLand(){return this.hasAmbit("LAND")}hasAmbitSky(){return this.hasAmbit("SKY")}hasAmbitSpace(){return this.hasAmbit("SPACE")}hasAmbitWater(){return this.hasAmbit("WATER")}hasFeature(t){return this.features.includes(t)}hasFeatureAttack(){return this.hasFeature("ATTACK_SYSTEM")}hasFeatureDefensive(){return this.hasFeature("DEFENSIVE_SYSTEM")}hasFeatureEngineering(){return this.hasFeature("ENGINEERING_SYSTEM")}hasFeaturePower(){return this.hasFeature("POWER_SYSTEM")}hasFeatureStorage(){return this.hasFeature("STORAGE_SYSTEM")}getMeleeAttack(){return this.melee_attack}getRangeAttack(){return this.range_attack}getMeleeDefense(){return this.melee_defense}getRangeDefense(){return this.range_defense}getBuildRate(){return this.build_rate}getRestorationRate(){return this.restoration_rate}getChargingSlotCount(){return parseInt(this.charging_slot_count)}getGenerationRate(){return this.generate_rate}getChargeRate(){return this.charge_rate}getDrainRate(){return this.drain_rate}}class i{make(t){const e=new s;return Object.assign(e,t),e}}class r{constructor(t,s,i){this.scheme=t,this.domain=s,this.ajax=void 0!==i?i:new e}getStructures(){return this.ajax.get(`${this.scheme}${this.domain}/api/di/Structure`).then((t=>{const e=new i,s=[];for(let i=0;i<t.Structure.length;i++)s[i]=e.make(t.Structure[i]);return s}))}}class a{constructor(t,e=""){this.structure=t,this.idPrefix=e}getCanvasId(){return`${this.idPrefix}structure-${this.structure.getId()}`}render(){return`\n          <div class="nes-container structure-card">\n            <div class="game-asset-wrapper">\n              <canvas id="${this.getCanvasId()}" class="pixel-art-viewer" width="64" height="64">\n                Your browser does not support the canvas element.\n              </canvas>\n            </div>\n            <div class="nes-container with-title">\n              <h3 class="title">Attributes</h3>\n              <div class="details">\n                <h4>${this.structure.getName()}</h4>\n                <p>${this.structure.getDescription()}</p>\n                <br>\n                <div><span class="attribute-label">Structure ID:</span> ${this.structure.getId()}</div>\n                <div><span class="attribute-label">Health:</span> ${this.structure.getHealthCurrent()} / ${this.structure.getHealthMax()}</div>\n                <div><span class="attribute-label">Battery Charge:</span> ${this.structure.getBatteryAmount()} ${this.structure.getBatteryDenom()}</div>\n                <div><span class="attribute-label">Ambits:</span> ${this.structure.getAmbits()}</div>\n                <br>\n                <div><span class="attribute-label">Speed:</span> ${this.structure.getSpeed()}</div>\n                <div><span class="attribute-label">Accuracy:</span> ${this.structure.getAccuracy()}</div>\n                <div><span class="attribute-label">Mass:</span> ${this.structure.getMass()}</div>\n                <div><span class="attribute-label">Strength:</span> ${this.structure.getStrength()}</div>\n                <div><span class="attribute-label">Energy Efficiency:</span> ${this.structure.getEnergyEfficiency()}</div>\n              </div>\n            </div>\n            ${this.structure.hasFeatureAttack()?`\n              <div class="nes-container with-title">\n                <h3 class="title">Attack Systems</h3>\n                <div class="details">\n                  <div><span class="attribute-label">Melee Attack:</span> ${this.structure.getMeleeAttack()}</div>\n                  <div><span class="attribute-label">Range Attack:</span> ${this.structure.getRangeAttack()}</div>\n                </div>\n              </div>\n            `:""}\n            ${this.structure.hasFeatureDefensive()?`\n              <div class="nes-container with-title">\n                <h3 class="title">Defensive Systems</h3>\n                <div class="details">\n                  <div><span class="attribute-label">Melee Defense:</span> ${this.structure.getMeleeDefense()}</div>\n                  <div><span class="attribute-label">Range Defense:</span> ${this.structure.getRangeDefense()}</div>\n                </div>\n              </div>\n            `:""}\n            ${this.structure.hasFeatureEngineering()?`\n              <div class="nes-container with-title">\n                <h3 class="title">Engineering Systems</h3>\n                <div class="details">\n                  <div><span class="attribute-label">Build Rate:</span> ${this.structure.getBuildRate()}</div>\n                  <div><span class="attribute-label">Restoration Rate:</span> ${this.structure.getRestorationRate()}</div>\n                </div>\n              </div>\n            `:""}\n            ${this.structure.hasFeaturePower()?`<div class="nes-container with-title">\n                <h3 class="title">Power Systems</h3>\n                <div class="details">\n                  <div><span class="attribute-label">Generation Rate:</span> ${this.structure.getGenerationRate()}</div>\n                  <div><span class="attribute-label">Charge Rate:</span> ${this.structure.getChargeRate()}</div>\n                  <div><span class="attribute-label">Drain Rate:</span> ${this.structure.getDrainRate()}</div>\n                </div>\n              </div>`:""}\n          </div>\n        `}}class n{constructor(t,e,s=[]){this.canvas=t,this.aspectRatio=t.height/t.width,this.context=t.getContext("2d"),this.imageLayerPaths=e,this.numImagesLoaded=0,this.layers=[],this.palette=s,this.lockAspectRatio(),this.loadAndRenderImageLayers()}lockAspectRatio(){this.canvas.height=this.canvas.width*this.aspectRatio}areAllImagesLoaded(){return this.numImagesLoaded===this.imageLayerPaths.length}loadAndRenderImageLayers(){for(let t=0;t<this.imageLayerPaths.length;t++){const e=new Image,s=this;e.onload=()=>{s.numImagesLoaded++,s.areAllImagesLoaded()&&s.render()},e.src=this.imageLayerPaths[t],this.layers[t]=e}}render(){this.clearCanvas();for(let t=0;t<this.layers.length;t++)this.context.drawImage(this.layers[t],0,0);this.swapColors(this.palette)}swapColors(t){const e=this.context.getImageData(0,0,this.canvas.width,this.canvas.height),s=e.data;for(let e=0;e<s.length;e+=4)for(let i=0;i<t.length;i++){const r=t[i][0],a=t[i][1],n=s[e],h=s[e+1],u=s[e+2];n===r.r&&h===r.g&&u===r.b&&(s[e]=a.r,s[e+1]=a.g,s[e+2]=a.b)}this.context.putImageData(e,0,0)}clearCanvas(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}}class h{constructor(){this.imgDir="img/structures/",this.backgroundsDir="backgrounds/",this.mobileDir="mobile/",this.staticDir="static/"}backgroundDefault(t){t.push(`${this.imgDir}${this.backgroundsDir}structure-bg-default.png`)}backgroundLand(t,e){e.hasAmbitLand()&&t.push(`${this.imgDir}${this.backgroundsDir}structure-bg-land.png`)}backgroundSky(t,e){e.hasAmbitSky()&&t.push(`${this.imgDir}${this.backgroundsDir}structure-bg-sky.png`)}backgroundSpace(t,e){e.hasAmbitSpace()&&t.push(`${this.imgDir}${this.backgroundsDir}structure-bg-space.png`)}backgroundWater(t,e){e.hasAmbitWater()&&t.push(`${this.imgDir}${this.backgroundsDir}structure-bg-water.png`)}backgroundLayerFilter(t){t.push(`${this.imgDir}${this.backgroundsDir}structure-bg-lighten-15.png`)}mobileStructureChassis(t){t.push(`${this.imgDir}${this.mobileDir}structure-mobile-chassis.png`)}mobileStructureLand(t,e){e.hasAmbitLand()&&t.push(`${this.imgDir}${this.mobileDir}structure-mobile-land.png`)}mobileStructureSky(t,e){e.hasAmbitSky()&&t.push(`${this.imgDir}${this.mobileDir}structure-mobile-sky.png`)}mobileStructureSpace(t,e){e.hasAmbitSpace()&&t.push(`${this.imgDir}${this.mobileDir}structure-mobile-space.png`)}mobileStructureWater(t,e){e.hasAmbitWater()&&t.push(`${this.imgDir}${this.mobileDir}structure-mobile-water.png`)}mobileStructureAttack(t,e){e.hasFeatureAttack()&&t.push(`${this.imgDir}${this.mobileDir}structure-mobile-attack.png`)}mobileStructureDefensive(t,e){e.hasFeatureDefensive()&&t.push(`${this.imgDir}${this.mobileDir}structure-mobile-defense.png`)}mobileStructureEngineering(t,e){e.hasFeatureEngineering()&&t.push(`${this.imgDir}${this.mobileDir}structure-mobile-engineering.png`)}mobileStructurePower(t,e){e.hasFeaturePower()&&t.push(`${this.imgDir}${this.mobileDir}structure-mobile-power.png`)}mobileStructure(t,e){this.mobileStructureChassis(t),this.mobileStructureLand(t,e),this.mobileStructureSky(t,e),this.mobileStructureSpace(t,e),this.mobileStructureWater(t,e),this.mobileStructureAttack(t,e),this.mobileStructureDefensive(t,e),this.mobileStructureEngineering(t,e),this.mobileStructurePower(t,e)}staticStructureBuildings(t){t.push(`${this.imgDir}${this.staticDir}structure-static-buildings.png`)}staticStructureSky(t,e){e.hasAmbitSky()&&(t.push(`${this.imgDir}${this.staticDir}structure-static-buildings-base.png`),t.push(`${this.imgDir}${this.staticDir}structure-static-sky.png`))}staticStructureSpace(t,e){e.hasAmbitSpace()&&(t.push(`${this.imgDir}${this.staticDir}structure-static-buildings-base.png`),t.push(`${this.imgDir}${this.staticDir}structure-static-space.png`))}staticStructureWater(t,e){e.hasAmbitWater()&&(t.push(`${this.imgDir}${this.staticDir}structure-static-buildings-base.png`),t.push(`${this.imgDir}${this.staticDir}structure-static-water.png`))}staticStructureAttack(t,e){e.hasFeatureAttack()&&t.push(`${this.imgDir}${this.staticDir}structure-static-attack.png`)}staticStructureDefensive(t,e){e.hasFeatureDefensive()&&t.push(`${this.imgDir}${this.staticDir}structure-static-defense.png`)}staticStructureEngineering(t,e){e.hasFeatureEngineering()&&t.push(`${this.imgDir}${this.staticDir}structure-static-engineering.png`)}staticStructurePower(t,e){e.hasFeaturePower()&&t.push(`${this.imgDir}${this.staticDir}structure-static-power.png`)}staticStructure(t,e){this.staticStructureBuildings(t),this.staticStructureSky(t,e),this.staticStructureSpace(t,e),this.staticStructureWater(t,e),this.staticStructureAttack(t,e),this.staticStructureDefensive(t,e),this.staticStructureEngineering(t,e),this.staticStructurePower(t,e)}generate(t){let e=[];return this.backgroundDefault(e),this.backgroundSpace(e,t),this.backgroundSky(e,t),this.backgroundLand(e,t),this.backgroundWater(e,t),this.backgroundLayerFilter(e),t.isMobile()?this.mobileStructure(e,t):this.staticStructure(e,t),e}}class u{constructor(t,e,s,i,r,a){this.rankS=t,this.rankA=e,this.rankB=s,this.rankC=i,this.rankD=r,this.rankF=a}static make(t){return new u(t-.02*t,t-.16*t,t-.5*t,t-.84*t,t-.98*t,0)}}class c{constructor(){this.accuracyMax=255,this.energyEfficiencyMax=255,this.massMax=255,this.speedMax=255,this.strengthMax=255}getAttackRanks(){return u.make(this.speedMax+this.accuracyMax)}getDefensiveRanks(){return u.make(this.massMax+this.accuracyMax)}getEngineeringRanks(){return u.make(this.massMax+this.strengthMax)}getPowerRanks(){return u.make(this.energyEfficiencyMax+this.massMax)}}class g{constructor(){this.chassisTop=new t(255,152,0),this.chassisBottom=new t(255,87,34),this.waterFin=new t(255,186,0),this.landTire=new t(88,88,88),this.landHubCap=new t(192,192,192),this.skyWing=new t(244,67,54),this.spaceFlameCore=new t(254,254,254),this.spaceInnerFlame=new t(255,213,79),this.spaceOuterFlame=new t(255,61,0),this.attackGunBarrel=new t(158,158,158),this.attackGunAccent=new t(255,179,0),this.powerLightColor=[new t(118,251,3),new t(118,252,3),new t(118,253,3),new t(118,254,3),new t(118,255,3)],this.engineeringCraneArm=new t(132,175,196),this.engineeringCraneClaw=new t(220,232,238),this.defenseInnerShield=new t(128,216,255),this.defenseOuterShield=new t(224,247,250)}generateChassisPaletteSwap(t,e){const s=e.clampAvgBrightness(40,255).getShades(2);t.push([this.chassisTop,s[0]]),t.push([this.chassisBottom,s[1]])}generateSkyPaletteSwap(t,e){const s=e.clampAvgBrightness(250,255).getShades(2);t.push([this.skyWing,s[1]])}generateWaterPaletteSwap(t,e){const s=e.clampAvgBrightness(250,255).getShades(2);t.push([this.waterFin,s[1]])}generateAttackPaletteSwap(e,s,i){const r=(new c).getAttackRanks();let a=new t(255,0,0),n=this.attackGunBarrel;i.getRangeAttack()>r.rankS?(a=new t(255,255,255),n=new t(255,255,255)):i.getRangeAttack()>r.rankA?a=new t(0,186,255):i.getRangeAttack()>r.rankB?a=new t(0,255,174):i.getRangeAttack()>r.rankC?a=new t(255,252,0):i.getRangeAttack()>r.rankD&&(a=new t(255,179,0)),e.push([this.attackGunBarrel,n]),e.push([this.attackGunAccent,a])}generateDefensivePaletteSwap(e,s,i){const r=s.getComplimentaryColor().clampAvgBrightness(240,255).getShades(10),a=(new c).getDefensiveRanks();let n=r[4],h=r[6];i.getRangeDefense()>a.rankS?(n=new t(255,255,255),h=new t(40,40,40)):i.getRangeDefense()>a.rankA?(n=r[0],h=r[2]):i.getRangeDefense()>a.rankB?(n=r[1],h=r[3]):i.getRangeDefense()>a.rankC?(n=r[2],h=r[4]):i.getRangeDefense()>a.rankD&&(n=r[3],h=r[5]),e.push([this.defenseOuterShield,n]),e.push([this.defenseInnerShield,h])}generateEngineeringPaletteSwap(e,s,i){const r=(new c).getEngineeringRanks();let a=new t(194,15,15);i.getBuildRate()>r.rankS?a=new t(20,20,20):i.getBuildRate()>r.rankA?a=this.engineeringCraneArm:i.getBuildRate()>r.rankB?a=new t(82,148,68):i.getBuildRate()>r.rankC?a=new t(240,198,5):i.getBuildRate()>r.rankD&&(a=new t(230,124,0)),e.push([this.engineeringCraneArm,a])}generatePowerPaletteSwap(e,s,i){const r=5-Math.min(i.getChargingSlotCount(),5);for(let s=0;s<r;s++)e.push([this.powerLightColor[s],new t(20,44,0)])}generatePaletteSwap(t,e){const s=[];return this.generateChassisPaletteSwap(s,t),this.generateSkyPaletteSwap(s,t),this.generateWaterPaletteSwap(s,t),this.generateAttackPaletteSwap(s,t,e),this.generateDefensivePaletteSwap(s,t,e),this.generateEngineeringPaletteSwap(s,t,e),this.generatePowerPaletteSwap(s,t,e),s}}class l{constructor(){this.buildingsLeft=new t(224,224,224),this.buildingsCenterLeft=new t(158,158,158),this.buildingsCenter=new t(238,238,238),this.buildingsCenterStripe=new t(85,85,85),this.buildingsCenterRight=new t(224,224,224),this.buildingsRight=new t(189,189,189),this.buildingsBaseTop=new t(176,190,197),this.buildingsBaseBottom=new t(96,125,139),this.skyInnerFlame=new t(255,235,59),this.skyOuterFlame=new t(213,0,0),this.defenseInnerShield=new t(128,216,255),this.defenseOuterShield=new t(224,247,250),this.powerLightColor=[new t(118,251,3),new t(118,252,3),new t(118,253,3),new t(118,254,3),new t(118,255,3)],this.engineeringCraneTower=new t(255,193,7),this.engineeringCraneClaw=new t(147,147,135),this.attackTurret=new t(124,146,90)}generateBuildingsPaletteSwap(t,e){const s=this.buildingsCenter.mixColors(e,.6).getShades(5);t.push([this.buildingsCenter,s[0]]),t.push([this.buildingsLeft,s[1]]),t.push([this.buildingsRight,s[2]]),t.push([this.buildingsCenterLeft,s[3]]),t.push([this.buildingsCenterStripe,s[4]])}generateAttackPaletteSwap(e,s,i){const r=(new c).getAttackRanks();let a=new t(146,131,90);i.getRangeAttack()>r.rankS?a=new t(255,255,255):i.getRangeAttack()>r.rankA?a=new t(90,112,146):i.getRangeAttack()>r.rankB?a=new t(90,140,146):i.getRangeAttack()>r.rankC?a=new t(90,146,120):i.getRangeAttack()>r.rankD&&(a=new t(124,146,90)),e.push([this.attackTurret,a])}generateDefensivePaletteSwap(e,s,i){const r=s.getComplimentaryColor().clampAvgBrightness(240,255).getShades(10),a=(new c).getDefensiveRanks();let n=r[4],h=r[6];i.getRangeDefense()>a.rankS?(n=new t(255,255,255),h=new t(40,40,40)):i.getRangeDefense()>a.rankA?(n=r[0],h=r[2]):i.getRangeDefense()>a.rankB?(n=r[1],h=r[3]):i.getRangeDefense()>a.rankC?(n=r[2],h=r[4]):i.getRangeDefense()>a.rankD&&(n=r[3],h=r[5]),e.push([this.defenseOuterShield,n]),e.push([this.defenseInnerShield,h])}generateEngineeringPaletteSwap(e,s,i){const r=(new c).getEngineeringRanks();let a=new t(194,15,15);i.getBuildRate()>r.rankS?a=new t(20,20,20):i.getBuildRate()>r.rankA?a=new t(31,11,229):i.getBuildRate()>r.rankB?a=new t(82,148,68):i.getBuildRate()>r.rankC?a=new t(240,198,5):i.getBuildRate()>r.rankD&&(a=new t(230,124,0)),e.push([this.engineeringCraneTower,a])}generatePowerPaletteSwap(e,s,i){const r=5-Math.min(i.getChargingSlotCount(),5);for(let s=0;s<r;s++)e.push([this.powerLightColor[s],new t(20,44,0)])}generatePaletteSwap(t,e){const s=[];return this.generateBuildingsPaletteSwap(s,t),this.generateAttackPaletteSwap(s,t,e),this.generateDefensivePaletteSwap(s,t,e),this.generateEngineeringPaletteSwap(s,t,e),this.generatePowerPaletteSwap(s,t,e),s}}(new class{constructor(t=new r("http://","droid.sh"),e=new h,s=new g,i=new l){this.droidApi=t,this.structureArtGenerator=e,this.structureMobilePalette=s,this.structureStaticPalette=i,this.structures=[]}getPalette(e){let s;const i=t.hexToRgb(e.getPrimaryColor());return s=!0===e.isMobile()?this.structureMobilePalette.generatePaletteSwap(i,e):this.structureStaticPalette.generatePaletteSwap(i,e),s}loadStructures(t){const e=document.getElementById(t);let s="";this.droidApi.getStructures().then((t=>{for(let e=0;e<t.length;e++){const i=new a(t[e]);s+=i.render(),this.structures[e]={structure:t[e],droidUIStructure:i,layers:this.structureArtGenerator.generate(t[e])}}e.innerHTML=s;for(let t=0;t<this.structures.length;t++){const e=document.getElementById(this.structures[t].droidUIStructure.getCanvasId());new n(e,this.structures[t].layers,this.getPalette(this.structures[t].structure)),console.log(this.structures[t].structure)}}))}}).loadStructures("structures-list")})();